local offset_QuestActionParamBase_Param = sdk.find_type_definition('app.quest.action.QuestActionBase'):get_field('_Param'):get_offset_from_base()

local quest_action_Param_parent_accessors = {
    accessors = {
        -- capcom was so nice to use the same _Param name in the base class and subclass, for different types. sigh.
        -- the array in the base class contains the real data whereas the subclass _Param gets assigned on setup
        -- so then the simplest solution is to only store the full array
        set = function (owner, value, fieldname)
            --- @cast fieldname string
            -- we need to add_ref_permanent() because that's what REFramenwork would do if we set the field normally, which we sadly can't
            -- would be nice to have this usecase documented somewhere in REF, but oh well
            owner:write_qword(
                offset_QuestActionParamBase_Param,
                value:add_ref_permanent():get_address()
            )
        end,
        get = function (owner, fieldname)
            --- @cast owner app.quest.action.QuestActionBase
            --- @cast fieldname string
            local array = sdk.to_managed_object(owner:read_qword(offset_QuestActionParamBase_Param))
            -- size=0 array is valid for NotifyStartQuest, NotifyEndQuest
            -- size=1 array is valid for any quest action with Params
            -- size>1 array I don't think is a thing in basegame, unless?
            if array and array.get_size and array:get_size() > 1 then
                print('Quest action params array has a funny number of items ', owner.RefProcessor and owner.RefProcessor.ProcID, array:get_size())
            end
            if array and not array.get_size then
                print('Invalid array obj', array)
            end
            return array
        end,
    }
}

--- @type table<string, UserdataEditorSettings>
return {
    ['app.PrefabController'] = {
        import_handler = {
            export = function (src)
                if not src or not src._Item then return '' end
                return src._Item:get_Path()
            end,
            import = function (src, target)
                if src == nil or src == '' or src == 'null' then return nil end
                target = target or sdk.create_instance('app.PrefabController')
                target._Item = target._Item or sdk.create_instance('via.Prefab') ---@type via.Prefab
                target._Item:set_Path(src)
                return target
            end
        }
    },

    ['app.quest.condition.SuddenQuestCondition.ConditionBase'] = {
        abstract = {
            'app.quest.condition.SuddenQuestCondition.CheckTimeOfDay',
            'app.quest.condition.SuddenQuestCondition.CheckSentimentRank',
            'app.quest.condition.SuddenQuestCondition.CheckScenario',
            'app.quest.condition.SuddenQuestCondition.CheckPlayerLevel',
            'app.quest.condition.SuddenQuestCondition.CheckDoorStateParam',
            'app.quest.condition.SuddenQuestCondition.CheckQuestElapsedTimeParam',
        }
    },
    ['app.QuestOracleConditionBase'] = {
        abstract = {
            'app.QuestOracleCompositeCondition',
            'app.QuestOracleVariableCondition',
        }
    },
    ['app.quest.condition.NpcOverrideCondition.ConditionBase'] = {
        abstract = {
            'app.quest.condition.NpcOverrideCondition.CheckVariable',
            'app.quest.condition.NpcOverrideCondition.CheckTimeOfDay',
            'app.quest.condition.NpcOverrideCondition.CheckCondiiton', -- yes the devs typo'd this one
        },
    },

    ['app.QuestAfterStoryData.ConditionBase'] = {
        abstract = {
            'app.QuestAfterStoryData.CheckVariable',
            'app.QuestAfterStoryData.CheckElapsedTimeParam',
        }
    },

    ['app.QuestVariableBase'] = {
        abstract = {
            'app.QuestScriptSetVariable',
            'app.QuestResultNoVariable',
            'app.QuestProcessorResultNoVariable',
            'app.QuestItemNumVariable',
            'app.QuestItemHaveVariable',
            'app.QuestTalkResultVariable',
        },
    },
    ['app.quest.action.QuestActionBase'] = {
        import_field_whitelist = {'_Param'},
        abstract = {
            'app.quest.action.CharacterQuestFlagControl',
            'app.quest.action.CollidersTrigger',
            'app.quest.action.EnemyControl',
            'app.quest.action.EnvironmentControl',
            'app.quest.action.ForceBattleMode',
            'app.quest.action.GimmickControl',
            'app.quest.action.GuiMapRelease',
            'app.quest.action.ItemControl',
            'app.quest.action.NotifyEndQuest',
            'app.quest.action.NotifyStartQuest',
            'app.quest.action.NpcControl',
            'app.quest.action.OxcartControl',
            'app.quest.action.PawnBreakaway',
            'app.quest.action.PawnControl',
            'app.quest.action.PlayEvent',
            'app.quest.action.PlayerControl',
            'app.quest.action.QuestFerrystoneControl',
            'app.quest.action.QuestReward',
            'app.quest.action.QuestRuleControl',
            'app.quest.action.QuestTimeWeather',
            'app.quest.action.ReactionCircle',
            'app.quest.action.ResetTalkResultNo',
            'app.quest.action.SoundControl',
            'app.quest.action.SwitchingQuestVariable',
            'app.quest.action.Trigger',
            'app.quest.action.Tutorial',
            'app.quest.action.UniqueAction000',
            'app.quest.action.UniqueAction001',
            'app.quest.action.UniqueAction002',
            'app.quest.action.UniqueAction003',
            'app.quest.action.UniqueAction004',
            'app.quest.action.UniqueAction005',
            'app.quest.action.UniqueAction006',
            'app.quest.action.UniqueAction007',
            'app.quest.action.UniqueAction008',
            'app.quest.action.UniqueAction009',
            'app.quest.action.UniqueAction010',
            'app.quest.action.UniqueAction011',
            'app.quest.action.UniqueAction012',
            'app.quest.action.UniqueAction013',
            'app.quest.action.UniqueAction014',
            'app.quest.action.UniqueAction015',
            'app.quest.action.UniqueAction016',
            'app.quest.action.UniqueAction017',
            'app.quest.action.UniqueAction018',
            'app.quest.action.UniqueAction019',
            'app.quest.action.UniqueAction020',
            'app.quest.action.UniqueAction021',
            'app.quest.action.UniqueAction022',
            'app.quest.action.UniqueAction023',
            'app.quest.action.UniqueAction024',
            'app.quest.action.UniqueAction025',
            'app.quest.action.UniqueAction026',
            'app.quest.action.UniqueAction027',
            'app.quest.action.UniqueAction028',
            'app.quest.action.UniqueAction029',
            'app.quest.action.UniqueAction030',
            'app.quest.action.UniqueAction031',
            'app.quest.action.UniqueAction032',
            'app.quest.action.UniqueAction033',
            'app.quest.action.UniqueAction034',
            'app.quest.action.UniqueAction035',
            'app.quest.action.UniqueAction036',
            'app.quest.action.UniqueAction037',
            'app.quest.action.UniqueAction038',
            'app.quest.action.UniqueAction039',
            'app.quest.action.UniqueAction040',
            'app.quest.action.UniqueAction041',
            'app.quest.action.UniqueAction042',
            'app.quest.action.UniqueAction043',
            'app.quest.action.UniqueAction044',
            'app.quest.action.UniqueAction045',
            'app.quest.action.UniqueAction046',
            'app.quest.action.UniqueAction047',
            'app.quest.action.UniqueAction048',
            'app.quest.action.UniqueAction049',
            'app.quest.action.UniqueAction050',
            'app.quest.action.UniqueAction051',
            'app.quest.action.UniqueAction052',
            'app.quest.action.UniqueAction053',
            'app.quest.action.UniqueAction054',
            'app.quest.action.UniqueAction055',
            'app.quest.action.UniqueAction056',
            'app.quest.action.UniqueAction057',
            'app.quest.action.UniqueAction058',
            'app.quest.action.UniqueAction059',
            'app.quest.action.UniqueAction060',
            'app.quest.action.UniqueAction061',
            'app.quest.action.UniqueAction062',
            'app.quest.action.UniqueAction063',
            'app.quest.action.UniqueAction064',
            'app.quest.action.UniqueAction065',
            'app.quest.action.UniqueAction066',
            'app.quest.action.UniqueAction067',
            'app.quest.action.UniqueAction068',
            'app.quest.action.UniqueAction069',
            'app.quest.action.UniqueAction070',
            'app.quest.action.UniqueAction071',
            'app.quest.action.UniqueAction072',
            'app.quest.action.UniqueAction073',
            'app.quest.action.UniqueAction074',
        },
    },
    ['app.quest.condition.ConditionParamBase'] = {
        abstract = {
            'app.quest.condition.Check010180PlayDemoConditionParam',
            'app.quest.condition.CheckBackStageDateParam',
            'app.quest.condition.CheckCaughtNPCParam',
            'app.quest.condition.CheckCh259BackStageBattleEndParam',
            'app.quest.condition.CheckCharacterEquipmentParam',
            'app.quest.condition.CheckCharacterHPRatioParam',
            'app.quest.condition.CheckCharacterJobParam',
            'app.quest.condition.CheckCharacterSpeciesParam',
            'app.quest.condition.CheckChoiceSelectedTalkEventParam',
            'app.quest.condition.CheckCollidersParam',
            'app.quest.condition.CheckCrimeConditionParam',
            'app.quest.condition.CheckDeliverParam',
            'app.quest.condition.CheckElapsedTimeParam',
            'app.quest.condition.CheckEnemyDefeatConditionParam',
            'app.quest.condition.CheckEnemyDefeatParam',
            'app.quest.condition.CheckEnemyGenerateConditionParam',
            'app.quest.condition.CheckEquipItemParam',
            'app.quest.condition.CheckEquipStatusParam',
            'app.quest.condition.CheckFollowNpcParam',
            'app.quest.condition.CheckGimmickCollidersParam',
            'app.quest.condition.CheckGimmickStateParam',
            'app.quest.condition.CheckGlobalCountParam',
            'app.quest.condition.CheckHasItemParam',
            'app.quest.condition.CheckHaveDeliverParam',
            'app.quest.condition.CheckJobMasterItemParam',
            'app.quest.condition.CheckLocalAreaParam',
            'app.quest.condition.CheckNPCArrivedLocationParam',
            'app.quest.condition.CheckNPCHolderTypeParam',
            'app.quest.condition.CheckNpcCostumeParam',
            'app.quest.condition.CheckNpcDistanceParam',
            'app.quest.condition.CheckPawnStateParam',
            'app.quest.condition.CheckPlayerActionParam',
            'app.quest.condition.CheckPlayerJailParam',
            'app.quest.condition.CheckQuestConditionParam',
            'app.quest.condition.CheckQuestParam',
            'app.quest.condition.CheckQuestVariableParam',
            'app.quest.condition.CheckRimStoneDistanceParam',
            'app.quest.condition.CheckScenarioParam',
            'app.quest.condition.CheckSentimentRankParam',
            'app.quest.condition.CheckStartCutSceneParam',
            'app.quest.condition.CheckStatusConditionParam',
            'app.quest.condition.CheckTakeOxcartSeatParam',
            'app.quest.condition.CheckTalkEventEndNoParam',
            'app.quest.condition.CheckTalkingIDConditionParam',
            'app.quest.condition.CheckTimeOfDayParam',
            'app.quest.condition.CheckVisionSensorParam',
        },
    },
    ['app.quest.condition.ConditionBase'] = {
        abstract = {
            'app.quest.condition.Check010180PlayDemoCondition',
            'app.quest.condition.CheckBackStageDate',
            'app.quest.condition.CheckCaughtNPC',
            'app.quest.condition.CheckCh259BackStageBattleEnd',
            'app.quest.condition.CheckCharacterEquipment',
            'app.quest.condition.CheckCharacterHPRatio',
            'app.quest.condition.CheckCharacterJob',
            'app.quest.condition.CheckCharacterSpecies',
            'app.quest.condition.CheckChoiceSelectedTalkEvent',
            'app.quest.condition.CheckColliders',
            'app.quest.condition.CheckCrimeCondition',
            'app.quest.condition.CheckDeliver',
            'app.quest.condition.CheckElapsedTime',
            'app.quest.condition.CheckEnemyDefeatCondition',
            'app.quest.condition.CheckEnemyDefeat',
            'app.quest.condition.CheckEnemyGenerateCondition',
            'app.quest.condition.CheckEquipItem',
            'app.quest.condition.CheckEquipStatus',
            'app.quest.condition.CheckFollowNpc',
            'app.quest.condition.CheckGimmickColliders',
            'app.quest.condition.CheckGimmickState',
            'app.quest.condition.CheckGlobalCount',
            'app.quest.condition.CheckHasItem',
            'app.quest.condition.CheckHaveDeliver',
            'app.quest.condition.CheckJobMasterItem',
            'app.quest.condition.CheckLocalArea',
            'app.quest.condition.CheckNPCArrivedLocation',
            'app.quest.condition.CheckNPCHolderType',
            'app.quest.condition.CheckNpcCostume',
            'app.quest.condition.CheckNpcDistance',
            'app.quest.condition.CheckPawnState',
            'app.quest.condition.CheckPlayerAction',
            'app.quest.condition.CheckPlayerJail',
            'app.quest.condition.CheckQuestCondition',
            'app.quest.condition.CheckQuestStatus',
            'app.quest.condition.CheckQuestVariable',
            'app.quest.condition.CheckRimStoneDistance',
            'app.quest.condition.CheckSentimentRank',
            'app.quest.condition.CheckStartCutScene',
            'app.quest.condition.CheckStatusCondition',
            'app.quest.condition.CheckTakeOxcartSeat',
            'app.quest.condition.CheckTalkEventEndNo',
            'app.quest.condition.CheckTalkingIDCondition',
            'app.quest.condition.CheckTimeOfDay',
            'app.quest.condition.CheckVisionSensor',
        },
    },
    ['AISituation.AISituationTaskStateBase'] = {
        fields = {
            ['<OwnerTask>k__BackingField'] = { import_ignore = true },
            ['<IssuerAgent>k__BackingField'] = { import_ignore = true },
            ['<OwnerSituation>k__BackingField'] = { import_ignore = true },
            ['<OwnerAgent>k__BackingField'] = { import_ignore = true },
            _IsBeginAgain = { import_ignore = true },
            _IsCanceld = { import_ignore = true },
        },
        abstract = {
            'app.AISituationCh258000Phase2',
            'app.AISituationCheckPathActionPosition',
            'app.AISituationCoopActionBase',
            'app.AISituationJumpActionPosition',
            'app.AISituationMoveActionPosition',
            'app.AISituationTaskAddDecision',
            'app.AISituationTaskStateActiveGoalPlanningSituation',
            'app.AISituationTaskStateAddPawnCoolTime',
            'app.AISituationTaskStateAddRole',
            'app.AISituationTaskStateAlert',
            'app.AISituationTaskStateAttackPlayer',
            'app.AISituationTaskStateBetrayalBattlePawn',
            'app.AISituationTaskStateBreakRock',
            'app.AISituationTaskStateCancelInteract',
            'app.AISituationTaskStateChangeQuestVariable',
            'app.AISituationTaskStateCheckCommonFlag',
            'app.AISituationTaskStateCheckQuestVariable',
            'app.AISituationTaskStateCoopActionInteract',
            'app.AISituationTaskStateDoorLock',
            'app.AISituationTaskStateDrawing',
            'app.AISituationTaskStateEntity',
            'app.AISituationTaskStateEntitySigleNode',
            'app.AISituationTaskStateFallCatch',
            'app.AISituationTaskStateFloating',
            'app.AISituationTaskStateFollowNpc',
            'app.AISituationTaskStateFollowPlayer',
            'app.AISituationTaskStateForceDissolveNonCombat',
            'app.AISituationTaskStateForceInteract',
            'app.AISituationTaskStateGenerateGimmick',
            'app.AISituationTaskStateGimmickEnd',
            'app.AISituationTaskStateGimmickFlagChange',
            'app.AISituationTaskStateGuide',
            'app.AISituationTaskStateGuide_ch310079',
            'app.AISituationTaskStateHighTouch',
            'app.AISituationTaskStateHighTouchMove',
            'app.AISituationTaskStateInteract',
            'app.AISituationTaskStateInteractGm80_046',
            'app.AISituationTaskStateInteractGm80_048',
            'app.AISituationTaskStateInteractMove',
            'app.AISituationTaskStateIssueTask',
            'app.AISituationTaskStateJumpClimb',
            'app.AISituationTaskStateJumpComebackPoint',
            'app.AISituationTaskStateKeyPatrol',
            'app.AISituationTaskStateLookAt',
            'app.AISituationTaskStateLookAtPL',
            'app.AISituationTaskStateMoveComebackPoint',
            'app.AISituationTaskStateMoveHighTouch',
            'app.AISituationTaskStateMoveJumpComebackPoint',
            'app.AISituationTaskStateMoveReachActionPoint',
            'app.AISituationTaskStateMoveToCh255EscapePoint',
            'app.AISituationTaskStateMoveToGeneralPoint',
            'app.AISituationTaskStateMoveToInterestMarker',
            'app.AISituationTaskStateMoveToIssuer',
            'app.AISituationTaskStateMoveToLocalArea',
            'app.AISituationTaskStateMoveToPlayer',
            'app.AISituationTaskStateMoveToStandbyArea',
            'app.AISituationTaskStateMoveToTargetSpace',
            'app.AISituationTaskStateNotifyWait',
            'app.AISituationTaskStateOxcartDriverInteract',
            'app.AISituationTaskStateOxcartGuardsFollow',
            'app.AISituationTaskStateOxcartMoveToDoorway',
            'app.AISituationTaskStateOxcartMoveToDoorwayEx',
            'app.AISituationTaskStateOxcartMoveToDoorwayExit',
            'app.AISituationTaskStateOxcartMoveToDriverSeat',
            'app.AISituationTaskStateOxcartMoveToNPCSheetInteract',
            'app.AISituationTaskStateOxcartNPCInteract',
            'app.AISituationTaskStateOxcartOverHeadText',
            'app.AISituationTaskStateOxcartService',
            'app.AISituationTaskStateOxcartWaitArrive',
            'app.AISituationTaskStatePatrol',
            'app.AISituationTaskStatePlayActionID',
            'app.AISituationTaskStatePlayActionID_ForInstrumentAction',
            'app.AISituationTaskStatePushGimmick',
            'app.AISituationTaskStateQuestStroll',
            'app.AISituationTaskStateReachPosition',
            'app.AISituationTaskStateRemoveRole',
            'app.AISituationTaskStateResetOrderTarget',
            'app.AISituationTaskStateRoleCheck',
            'app.AISituationTaskStateSchedule',
            'app.AISituationTaskStateSearchGimmick',
            'app.AISituationTaskStateSheatheWeapon',
            'app.AISituationTaskStateShootObject',
            'app.AISituationTaskStateSpringJump',
            'app.AISituationTaskStateSpringboard',
            'app.AISituationTaskStateStalking',
            'app.AISituationTaskStateStayActionPoint',
            'app.AISituationTaskStateStayGeneralPosition',
            'app.AISituationTaskStateStroll',
            'app.AISituationTaskStateStrollWith',
            'app.AISituationTaskStateSwitchOffCommonFlag',
            'app.AISituationTaskStateSwitchOnCommonFlag',
            'app.AISituationTaskStateTalkEventMoveToPlayer',
            'app.AISituationTaskStateTalkEventMoveToTargetSpace',
            'app.AISituationTaskStateTalkPlayer',
            'app.AISituationTaskStateTalkToPlayer',
            'app.AISituationTaskStateTalkWithConditionToPlayer',
            'app.AISituationTaskStateTurnOnNearestKL',
            'app.AISituationTaskStateViewAction',
            'app.AISituationTaskStateWaitCh259',
            'app.AISituationTaskStateWaitComboAgent',
            'app.AISituationTaskStateWaitTimer',
            'app.AISituationTaskStateWaitToDanceRoom',
            'app.AISituationTaskStateWalkToRimStone',
            'app.AISituationTaskState_BlockGameTimeHour',
            'app.AISituationTaskState_BlockPlayerInAICheckArea',
            'app.AISituationTaskState_DissolveAppearDisappear',
            'app.AISituationTaskState_Jail_MoveInFrontOfPLayerJail',
            'app.AISituationTaskState_JobMaster_TalkPlayer',
            'app.AISituationTaskState_MoveToBase',
            'app.AISituationTaskState_MoveToMyRoom',
            'app.AISituationTaskState_NPCWarp',
            'app.AISituationTaskState_ObjectCarry',
            'app.AISituationTaskState_PartyPawnTalkPlayer',
            'app.AISituationTaskState_Passport_TalkPlayer',
            'app.AISituationTaskState_StrayPawn_LeaveToRimStone',
            'app.AISituationTaskState_StrayPawn_SalesMoveToPlayer',
            'app.AISituationTaskState_StrayPawn_TalkPlayer',
            'app.AISituationTaskState_SubSkill_TalkPlayer',
            'app.AISituationTaskState_TalkToPlayeroBase',
            'app.AISituationTaskState_qu010040_WarpGuide',
            -- this one's a generic; not sure if we are capable of handling that
            -- 'app.AISituationTaskStates_ActivateDecisionNode',
            'app.AISituationTaskStates_ActivateDecisionNode_BringBatalJar',
            'app.AISituationTaskStates_Battle_qu010030',
            'app.AISituationTaskStates_FightNPC',
            'app.AISituationTaskStates_GimmickInteractSchedule',
            'app.AISituationTaskStates_LocomotionTest',
            'app.AISituationTaskStates_QuestJump',
            'app.AISituationTaskStates_SketchMove',
            'app.AISituationTaskStates_qu020280_BattleMove',
            'app.AISituationTaskStates_qu020310_SketchMove',
        }
    },
    ['app.quest.action.QuestActionParamBase'] = {
        abstract = {
            'app.quest.action.CharacterQuestFlagControlParam',
            'app.quest.action.CollidersTriggerParam',
            'app.quest.action.EnemyControlParam',
            'app.quest.action.EnvironmentControlParam',
            'app.quest.action.ForceBattleModeParam',
            'app.quest.action.GimmickControlParam',
            'app.quest.action.GuiMapReleaseParam',
            'app.quest.action.ItemControlParam',
            'app.quest.action.NpcControlParam',
            'app.quest.action.OxcartControlParam',
            'app.quest.action.PawnBreakawayParam',
            'app.quest.action.PawnControlParam',
            'app.quest.action.PlayEventParam',
            'app.quest.action.PlayerControlParam',
            'app.quest.action.QuestFerrystoneControlParam',
            'app.quest.action.QuestRewardParam',
            'app.quest.action.QuestRuleControlParam',
            'app.quest.action.QuestTimeWeatherParam',
            'app.quest.action.ReactionCircleParam',
            'app.quest.action.ResetTalkResultNoParam',
            'app.quest.action.SoundControlParam',
            'app.quest.action.SwitchingQuestVariableParam',
            'app.quest.action.TriggerParam',
            'app.quest.action.TutorialParam',
            'app.quest.action.UniqueAction000Param',
            'app.quest.action.UniqueAction001Param',
            'app.quest.action.UniqueAction002Param',
            'app.quest.action.UniqueAction003Param',
            'app.quest.action.UniqueAction004Param',
            'app.quest.action.UniqueAction005Param',
            'app.quest.action.UniqueAction006Param',
            'app.quest.action.UniqueAction007Param',
            'app.quest.action.UniqueAction008Param',
            'app.quest.action.UniqueAction009Param',
            'app.quest.action.UniqueAction010Param',
            'app.quest.action.UniqueAction011Param',
            'app.quest.action.UniqueAction012Param',
            'app.quest.action.UniqueAction013Param',
            'app.quest.action.UniqueAction014Param',
            'app.quest.action.UniqueAction015Param',
            'app.quest.action.UniqueAction016Param',
            'app.quest.action.UniqueAction017Param',
            'app.quest.action.UniqueAction018Param',
            'app.quest.action.UniqueAction019Param',
            'app.quest.action.UniqueAction020Param',
            'app.quest.action.UniqueAction021Param',
            'app.quest.action.UniqueAction022Param',
            'app.quest.action.UniqueAction023Param',
            'app.quest.action.UniqueAction024Param',
            'app.quest.action.UniqueAction025Param',
            'app.quest.action.UniqueAction026Param',
            'app.quest.action.UniqueAction027Param',
            'app.quest.action.UniqueAction028Param',
            'app.quest.action.UniqueAction029Param',
            'app.quest.action.UniqueAction030Param',
            'app.quest.action.UniqueAction031Param',
            'app.quest.action.UniqueAction032Param',
            'app.quest.action.UniqueAction033Param',
            'app.quest.action.UniqueAction034Param',
            'app.quest.action.UniqueAction035Param',
            'app.quest.action.UniqueAction036Param',
            'app.quest.action.UniqueAction037Param',
            'app.quest.action.UniqueAction038Param',
            'app.quest.action.UniqueAction039Param',
            'app.quest.action.UniqueAction040Param',
            'app.quest.action.UniqueAction041Param',
            'app.quest.action.UniqueAction042Param',
            'app.quest.action.UniqueAction043Param',
            'app.quest.action.UniqueAction044Param',
            'app.quest.action.UniqueAction045Param',
            'app.quest.action.UniqueAction046Param',
            'app.quest.action.UniqueAction047Param',
            'app.quest.action.UniqueAction048Param',
            'app.quest.action.UniqueAction049Param',
            'app.quest.action.UniqueAction050Param',
            'app.quest.action.UniqueAction051Param',
            'app.quest.action.UniqueAction052Param',
            'app.quest.action.UniqueAction053Param',
            'app.quest.action.UniqueAction054Param',
            'app.quest.action.UniqueAction055Param',
            'app.quest.action.UniqueAction056Param',
            'app.quest.action.UniqueAction057Param',
            'app.quest.action.UniqueAction058Param',
            'app.quest.action.UniqueAction059Param',
            'app.quest.action.UniqueAction060Param',
            'app.quest.action.UniqueAction061Param',
            'app.quest.action.UniqueAction062Param',
            'app.quest.action.UniqueAction063Param',
            'app.quest.action.UniqueAction064Param',
            'app.quest.action.UniqueAction065Param',
            'app.quest.action.UniqueAction066Param',
            'app.quest.action.UniqueAction067Param',
            'app.quest.action.UniqueAction068Param',
            'app.quest.action.UniqueAction069Param',
            'app.quest.action.UniqueAction070Param',
            'app.quest.action.UniqueAction071Param',
            'app.quest.action.UniqueAction072Param',
            'app.quest.action.UniqueAction073Param',
            'app.quest.action.UniqueAction074Param',
        }
    },
    ['app.quest.gimmick.GimmickOptionParamBase'] = {
        abstract = {
            'app.quest.gimmick.OptionDoorLockParam',
            'app.quest.gimmick.OptionGimmickFlagParam',
            'app.quest.gimmick.OptionTreasureBoxParam',
        },
    },
    ['app.quest.gimmick.OptionDoorLockParam'] = {
        fields = {
            ['<RefProcessor>k__BackingField'] = { import_ignore = true },
        }
    },
    ['app.quest.gimmick.RefProcessor'] = {
        fields = {
            ['<RefProcessor>k__BackingField'] = { import_ignore = true },
        }
    },
    ['AISituation.AISituationPrerequisite'] = {
        abstract = {
            'AISituation.ConditionCheckCharaID',
            'AISituation.ConditionCheckCharacterKind',
            'AISituation.ConditionCheckGender',
            'AISituation.ConditionCheckInPLParty',
            'AISituation.ConditionCheckJob',
            'AISituation.ConditionCheckPersonality',
            'AISituation.ConditionCheckSpecies',
            'AISituation.PawnJob',
        },
    },
    ['app.quest.action.SoundControl.WorkBase'] = {
        fields = { RefProcessor = { import_ignore = true } },
        abstract = {
            'app.quest.action.SoundControl.PlaySEWork',
            'app.quest.action.SoundControl.PlayBGMWork',
            'app.quest.action.SoundControl.ChangeBGMWork',
        }
    },
    ['app.AISituation.TaskExecutableCondition'] = {
        abstract = {
            'app.AISituation.ActionPointHeight',
            'app.AISituation.CheckPawnSituation',
            'app.AISituation.CheckPawnStandby',
            'app.AISituation.CheckQuestVariableCondition',
            'app.AISituation.DistanceTaskCondition',
            'app.AISituation.EquipedSubSkill',
            'app.AISituation.InterestObject',
            'app.AISituation.IsActionPointDistanceNear',
            'app.AISituation.IsActivePawnOrder',
            'app.AISituation.IsAnyCustomSkillAvailable',
            'app.AISituation.IsCatapultJumpEnableForExplore',
            'app.AISituation.IsCatch',
            'app.AISituation.IsCh258000Phase',
            'app.AISituation.IsClimb',
            'app.AISituation.IsConcierge',
            'app.AISituation.IsCustomSkillAvailable',
            'app.AISituation.IsDanceHallHasNotStart',
            'app.AISituation.IsEnableSpaUse',
            'app.AISituation.IsExecuteFight',
            'app.AISituation.IsHighTouchHost',
            'app.AISituation.IsHighTouchType',
            'app.AISituation.IsInAnyLocalArea',
            'app.AISituation.IsInDanceHallTime',
            'app.AISituation.IsInTWN01BarAreaToPL',
            'app.AISituation.IsInTimeCondition',
            'app.AISituation.IsNormalSkillAvailable',
            'app.AISituation.IsNotRoleCondition',
            'app.AISituation.IsPawnOrderTarget',
            'app.AISituation.IsReachableCharacter',
            'app.AISituation.IsRechableTarget',
            'app.AISituation.IsStatusCondition',
            'app.AISituation.IssuerAgent',
            'app.AISituation.JobType',
            'app.AISituation.SentimentCheckCondition',
            'app.AISituation.TaskExecutableGoMyRoom',
            'app.AISituation.TaskExecutableIsInStalkingArea',
            'app.AISituation.TaskExecutableJobInPlayerLocalArea',
            'app.AISituation.TaskExecutableJobIsPlayerArrest',
            'app.AISituation.TaskExecutableOxcartMenber',
            'app.AISituation.TaskExecutableOxcartNotService',
            'app.AISituation.TaskExecutableOxcartOnCart',
            'app.AISituation.TaskExecutableOxcartPassenger',
            'app.AISituation.TaskExecutableOxcartService',
            'app.AISituation.TaskExecutableSchedule',
            'app.AISituation.TaskExecutableSentimentRank',
            'app.AISituation.TaskExecutableStroll',
            'app.AISituation.TaskExecutable_DIP_TaskLimiter',
            'app.AISituation.TaskExecutable_IsBackStage',
            'app.AISituation.TaskExecutable_IsFrontStage',
            'app.AISituation.TaskExecutable_IsNotPlayerInAICheckLocalArea',
            'app.AISituation.TaskExecutable_IsNotPlayerInLocalArea',
            'app.AISituation.TaskExecutable_IsNotPlayerInLocalAreaPrevious',
            'app.AISituation.TaskExecutable_IsPlayerInAICheckLocalArea',
            'app.AISituation.TaskExecutable_IsPlayerInLocalArea',
            'app.AISituation.TaskExecutable_IsPlayerInLocalAreaPrevious',
            'app.AISituation.TaskExecutable_IsPlayerInSameLocalArea',
            'app.AISituation.TaskExecutable_Jail_ReleaseFromJail',
            'app.AISituation.TaskExecutable_JobMaster_GoToPlayer',
            'app.AISituation.TaskExecutable_Oxcart_DriverBelling',
            'app.AISituation.TaskExecutable_Oxcart_DriverPosition',
            'app.AISituation.TaskExecutable_Oxcart_DriverRide',
            'app.AISituation.TaskExecutable_Oxcart_GuardPosition',
            'app.AISituation.TaskExecutable_Passport_GoToPlayer',
            'app.AISituation.TaskExecutable_Schedule_UnderseaTemple',
            'app.AISituation.TaskExecutable_StrayPawn_GoRim',
            'app.AISituation.TaskExecutable_StrayPawn_LeaveRim',
            'app.AISituation.TaskExecutable_StrayPawn_Sales',
            'app.AISituation.TaskExecutable_SubSkikk_GoToPlayer',
            'app.AISituation.WeightRank',
            'app.AISituation.hasAnyPawnCustomSkill',
        }
    },
    ['app.AISituation.TaskEvaluation'] = {
        abstract = {
            'app.AISituation.DistanceTaskEvaluation',
            'app.AISituation.HaveCustomSkillTaskEvaluation',
            'app.AISituation.PawnInfoTaskEvaluation',
            'app.AISituation.RandomTaskEvaluation',
            'app.AISituation.TaskEvaluationFixScore',
            'app.AISituation.TaskEvaluationOxcartPassenger',
        },
    },
    ['app.quest.condition.ScenarioConditionParam.ConditionBase'] = {
        abstract = {
            'app.quest.condition.ScenarioConditionParam.CheckScenario',
        }
    },
    ['AISituation.AISituationTaskBase'] = {
        abstract = {
            'app.AISituationResidentTaskData',
            'app.AISituationTaskEntity',
        }
    },
    ['AISituation.AISituationMetaAIConditionBase'] = {
        abstract = {
            'app.CheckInTimeMetaAICondition',
            'app.ExistSelectRoleOwnerMetaAICondition',
            'app.IsActiveCamp',
            'app.IsBetrayalPawnMetaAICondition',
            'app.IsHaveAutoSellEnableItem',
            'app.PLWeightRank',
            'app.PawnSituationMetaAICondition',
        }
    },
    ['app.quest.action.PlayEventData.DemoSetting.InfoBase'] = {
        abstract = {
            'app.quest.action.PlayEventData.DemoSetting.CutSceneInfo',
            'app.quest.action.PlayEventData.DemoSetting.IntercutInfo',
            'app.quest.action.PlayEventData.DemoSetting.MovieInfo',
            'app.quest.action.PlayEventData.DemoSetting.ScopeEventInfo',
            'app.quest.action.PlayEventData.DemoSetting.TalkDirectInfo',
        }
    },
    ['app.te.condition.TalkEventConditionBase'] = {
        abstract = {
            'app.te.condition.AffectionRankCondition',
            'app.te.condition.AreaCheckCondition',
            'app.te.condition.BlackboardTalkIDCondition',
            'app.te.condition.CampCheckCondition',
            'app.te.condition.CharacterDeadCondition',
            'app.te.condition.CharacterJobCondition',
            'app.te.condition.CharacterStateCondition',
            'app.te.condition.CheckClearCondition',
            'app.te.condition.CheckGimmickLockCondition',
            'app.te.condition.CheckGimmickStateCondition',
            'app.te.condition.CheckNpcCondition',
            'app.te.condition.CheckPawnCondition',
            'app.te.condition.CheckRulePartyDismissCondition',
            'app.te.condition.CheckRulePartyEmployCondition',
            'app.te.condition.CheckStrayPawnDismissCondition',
            'app.te.condition.CheckSuddenQuestCondition',
            'app.te.condition.CheckTimeOfDayCondition',
            'app.te.condition.CommonDeliverCondition',
            'app.te.condition.DayOfWeekCondition',
            'app.te.condition.DistanceCheckCondition',
            'app.te.condition.DressCodeCondition',
            'app.te.condition.EquipmentCondition',
            'app.te.condition.ForgeryCondition',
            'app.te.condition.GimmickFlagCondition',
            'app.te.condition.InitialSpeakerCondition',
            'app.te.condition.IsBackStageCondition',
            'app.te.condition.IsBrothelVIPCondition',
            'app.te.condition.IsMyPawnCondition',
            'app.te.condition.IsNewJobUnlockedCondition',
            'app.te.condition.IsPlayerBeastmanCondition',
            'app.te.condition.ItemBoughtCondition',
            'app.te.condition.ItemHaveCondition',
            'app.te.condition.ItemNumCondition',
            'app.te.condition.JailCondition',
            'app.te.condition.JobChangeResultCondition',
            'app.te.condition.MoneyHaveCondition',
            'app.te.condition.MyPawnCondition',
            'app.te.condition.NpcAIStateCondition',
            'app.te.condition.NpcCollisionNumCondition',
            'app.te.condition.NpcInPartyCondition',
            'app.te.condition.NpcLocatedCondition',
            'app.te.condition.NpcPresentCondition',
            'app.te.condition.OxcartCondition',
            'app.te.condition.PawnAreaBadgeCondition',
            'app.te.condition.PawnInPartyCondition',
            'app.te.condition.PawnSubskillCondition',
            'app.te.condition.PowderedRimHaveCondition',
            'app.te.condition.QuestDeliverCondition',
            'app.te.condition.QuestVariableCondition',
            'app.te.condition.RatingCheckCondition',
            'app.te.condition.ScenarioCheckCondition',
            'app.te.condition.SeekerCondition',
            'app.te.condition.ShopUseNumCondition',
            'app.te.condition.SkillAbilityCheckCondition',
            'app.te.condition.SpaCheckCondition',
            'app.te.condition.TalkEventChoiceCondition',
            'app.te.condition.TalkEventResultCondition',
        }
    },
    ['app.decision.condition.ConditionBase'] = {
        abstract = {
            'app.decision.condition.AIHpStatus',
            'app.decision.condition.AIStaminaStatus',
            'app.decision.condition.AIState',
            'app.decision.condition.ActionBB_Bool',
            'app.decision.condition.ActionBB_Float',
            'app.decision.condition.ActionBB_Int',
            'app.decision.condition.ActionBB_String',
            'app.decision.condition.ActivePartyCommandTime',
            'app.decision.condition.ActivePawnCommandTime',
            'app.decision.condition.AngleFromPlayer',
            'app.decision.condition.AnyCharacterLocalArea',
            'app.decision.condition.AnyPersonality',
            'app.decision.condition.AreaAtmosphere',
            'app.decision.condition.Around',
            'app.decision.condition.AroundEnableDeadBodyInteractNum',
            'app.decision.condition.AroundOverwriteDistance',
            'app.decision.condition.AttackDetection',
            'app.decision.condition.BackStageDay',
            'app.decision.condition.BattleMode',
            'app.decision.condition.BattleResult',
            'app.decision.condition.Camp',
            'app.decision.condition.CanCoopAction',
            'app.decision.condition.CanCoopActionLevitate',
            'app.decision.condition.CanPawnHelpPlayer',
            'app.decision.condition.CanUseItemWithMotion',
            'app.decision.condition.CharacterDataPrecondition',
            'app.decision.condition.CharacterKind',
            'app.decision.condition.Composite',
            'app.decision.condition.ConbatState',
            'app.decision.condition.ConciergeDestination',
            'app.decision.condition.ConciergeDestinationDistance',
            'app.decision.condition.ConciergeDestinationType',
            'app.decision.condition.ConciergePause',
            'app.decision.condition.ConciergeSeeDestinationPos',
            'app.decision.condition.ConciergeType',
            'app.decision.condition.Condition',
            'app.decision.condition.Conversation_CrimeValueAbove',
            'app.decision.condition.Conversation_NearSoldier',
            'app.decision.condition.Conversation_NearThief',
            'app.decision.condition.Conversation_NearThiefDead',
            'app.decision.condition.Conversation_OxcartActive',
            'app.decision.condition.Conversation_PatrolInAction',
            'app.decision.condition.Conversation_PawnTalk_BRD_LocationInfo_015',
            'app.decision.condition.Conversation_RepairInAction',
            'app.decision.condition.Conversation_UnderWaterLineInBackStage',
            'app.decision.condition.DamageType',
            'app.decision.condition.DayOfWeek',
            'app.decision.condition.DeadPartyPawnNum',
            'app.decision.condition.DecisionSelect',
            'app.decision.condition.DistanceFromLastGround',
            'app.decision.condition.DistanceFromPlayer',
            'app.decision.condition.DistanceFromWaitPosition',
            'app.decision.condition.EnableFieldGuidance',
            'app.decision.condition.EnemyCommonThinkFlag',
            'app.decision.condition.EnemyUniqueThinkFlag',
            'app.decision.condition.Escape',
            'app.decision.condition.EscapeForCaution',
            'app.decision.condition.ExecutingQuestDecision',
            'app.decision.condition.FieldGuidanceDestinationType',
            'app.decision.condition.FormationBB_Bool',
            'app.decision.condition.Gender',
            'app.decision.condition.GuardBitNum',
            'app.decision.condition.HasCurrentAreaFieldBadge',
            'app.decision.condition.HasMaterialSearchSubSkill',
            'app.decision.condition.HasQuestLayerTask',
            'app.decision.condition.HasSelectedDecisionPack',
            'app.decision.condition.HasSituationTask',
            'app.decision.condition.HasSituationTaskPosition',
            'app.decision.condition.HaveAITaskSituation',
            'app.decision.condition.HaveGatherItem',
            'app.decision.condition.HaveItems',
            'app.decision.condition.HeightDiffFromPlayer',
            'app.decision.condition.HighTouchType',
            'app.decision.condition.HoldDownCoopAttacker',
            'app.decision.condition.Hp',
            'app.decision.condition.HumanTempStatus',
            'app.decision.condition.InCamera',
            'app.decision.condition.InTargetArea',
            'app.decision.condition.Interact',
            'app.decision.condition.InterestObject',
            'app.decision.condition.IsActiveAbsoluteAvoidance',
            'app.decision.condition.IsActiveBrine',
            'app.decision.condition.IsActiveHolyGlareEnchanter',
            'app.decision.condition.IsActiveRageFregrance',
            'app.decision.condition.IsActiveStealth',
            'app.decision.condition.IsAirShootAfterMeleeAttack',
            'app.decision.condition.IsAroundEnemySpecies',
            'app.decision.condition.IsAttackNoticeArea',
            'app.decision.condition.IsAttackNoticeAreaType',
            'app.decision.condition.IsBackStage',
            'app.decision.condition.IsBattleGoalAction',
            'app.decision.condition.IsCampSleep',
            'app.decision.condition.IsCancelAction',
            'app.decision.condition.IsCarry',
            'app.decision.condition.IsCatapultJumpEnableForExplore',
            'app.decision.condition.IsCatch',
            'app.decision.condition.IsCatchAnyGimmickID',
            'app.decision.condition.IsCatchGimmickID',
            'app.decision.condition.IsCatchTargetType',
            'app.decision.condition.IsCaught',
            'app.decision.condition.IsCaughtBy',
            'app.decision.condition.IsCh224NotEating',
            'app.decision.condition.IsCh258Gm80046AllDestroyed',
            'app.decision.condition.IsCh259StickRegionNum',
            'app.decision.condition.IsChanceEnemy',
            'app.decision.condition.IsChargeNormalAttack',
            'app.decision.condition.IsChargeSkill_Job05',
            'app.decision.condition.IsCheckPanwOrderTarget',
            'app.decision.condition.IsClearedQuestDungeon',
            'app.decision.condition.IsCliffCatchEnable',
            'app.decision.condition.IsClimbActivePlayer',
            'app.decision.condition.IsClimbingBridgeLadder',
            'app.decision.condition.IsClimbingLadder',
            'app.decision.condition.IsCompleteNavigation',
            'app.decision.condition.IsConciergeCharacter',
            'app.decision.condition.IsConciergeDestinationDungeon',
            'app.decision.condition.IsContactExploreInterestMarker',
            'app.decision.condition.IsContactInterestMarker',
            'app.decision.condition.IsCorrectFormationPos',
            'app.decision.condition.IsCrawling',
            'app.decision.condition.IsCrimeMode',
            'app.decision.condition.IsDamageFallHeight',
            'app.decision.condition.IsDead',
            'app.decision.condition.IsDown',
            'app.decision.condition.IsDragonPossessionEventOccurred',
            'app.decision.condition.IsDrawWeapon',
            'app.decision.condition.IsDrawedWeapon',
            'app.decision.condition.IsEnableDIP',
            'app.decision.condition.IsEnableLanternTurnOn',
            'app.decision.condition.IsEnterTimingNonMaxMainPawnHP',
            'app.decision.condition.IsEquipSlashWeapon',
            'app.decision.condition.IsEquipWeapon',
            'app.decision.condition.IsFellowOfPlayer',
            'app.decision.condition.IsFinishWaitMove',
            'app.decision.condition.IsForbiddenReactionLayerDecision',
            'app.decision.condition.IsFrankPawnInPartyNoStamina',
            'app.decision.condition.IsGameClear',
            'app.decision.condition.IsGetConciergeCloserToPl',
            'app.decision.condition.IsGuiding',
            'app.decision.condition.IsGuidingNPC',
            'app.decision.condition.IsHaveEnableLantern',
            'app.decision.condition.IsHaveHealItem',
            'app.decision.condition.IsHaveItemDeliveryForQuestDestination',
            'app.decision.condition.IsHighFiveRequest',
            'app.decision.condition.IsHoldDownEnemy',
            'app.decision.condition.IsIgnoreOrderTime',
            'app.decision.condition.IsInBrightPlace',
            'app.decision.condition.IsInCoopActionArea',
            'app.decision.condition.IsInDungeon',
            'app.decision.condition.IsInDungeonMap',
            'app.decision.condition.IsInSpa',
            'app.decision.condition.IsInSpaLeaveTime',
            'app.decision.condition.IsInTownArea',
            'app.decision.condition.IsInWater',
            'app.decision.condition.IsInfontOfPlayer',
            'app.decision.condition.IsIntaeractFinishSwitchGimmick',
            'app.decision.condition.IsInteractiong',
            'app.decision.condition.IsInteractiongOrderTarget',
            'app.decision.condition.IsKilledByBrine',
            'app.decision.condition.IsLastCS',
            'app.decision.condition.IsLastComebackWarp',
            'app.decision.condition.IsLastMV',
            'app.decision.condition.IsLastScopeEvent',
            'app.decision.condition.IsLevitate',
            'app.decision.condition.IsLoveAngryFace',
            'app.decision.condition.IsLoveOxcartValid',
            'app.decision.condition.IsMainPawn',
            'app.decision.condition.IsMainPawnInParty',
            'app.decision.condition.IsMainPawnLostOnce',
            'app.decision.condition.IsMoveFrontInConcierge',
            'app.decision.condition.IsMultipleSpellDecision',
            'app.decision.condition.IsMyPawnJobChanged',
            'app.decision.condition.IsNavigationPossible',
            'app.decision.condition.IsNeedItemForEnhance',
            'app.decision.condition.IsOnBridge',
            'app.decision.condition.IsOnMovingGimmick',
            'app.decision.condition.IsOnline',
            'app.decision.condition.IsOverWriteSchedule',
            'app.decision.condition.IsOverrideDrawWeapon',
            'app.decision.condition.IsPLInLastDragonPossessionEventArea',
            'app.decision.condition.IsPLMoveOnWay',
            'app.decision.condition.IsPartyInFormationArea',
            'app.decision.condition.IsPartyPawn',
            'app.decision.condition.IsPawnPassItem',
            'app.decision.condition.IsPawnSpringboardJump',
            'app.decision.condition.IsPawnViewTaskCoolTime',
            'app.decision.condition.IsPlayerInCurrentQuestDestinationDungeon',
            'app.decision.condition.IsPlayerKeepMoving',
            'app.decision.condition.IsPlayerRescuePawn',
            'app.decision.condition.IsPlayerTrack',
            'app.decision.condition.IsPlayingLoopAttack_Job04',
            'app.decision.condition.IsPluralEnemy',
            'app.decision.condition.IsPrepareSpell',
            'app.decision.condition.IsQuestComplete',
            'app.decision.condition.IsQuestLogEnd',
            'app.decision.condition.IsQuestLogProgressing',
            'app.decision.condition.IsQuestMultipleEnding',
            'app.decision.condition.IsRecentEquipmentEquippableByParty',
            'app.decision.condition.IsRecentEquipmentEquippedByParty',
            'app.decision.condition.IsRecentEquipmentLevelHigherThanCurrent',
            'app.decision.condition.IsRequestDisableActionWithoutMovement',
            'app.decision.condition.IsRunningOutOfStamina',
            'app.decision.condition.IsSafetyPosition',
            'app.decision.condition.IsSaidAttractCh258000',
            'app.decision.condition.IsSaidHelpImpossible',
            'app.decision.condition.IsSamePrevTargetPLAttack',
            'app.decision.condition.IsSecondOrderTargetEnemy',
            'app.decision.condition.IsSentimentLevel',
            'app.decision.condition.IsSetRemoteBomb',
            'app.decision.condition.IsSheathe',
            'app.decision.condition.IsShopTalkEventAvailable',
            'app.decision.condition.IsSimplePawnInPartyRecentItemPickup',
            'app.decision.condition.IsSitOnTheGround',
            'app.decision.condition.IsSkillBreakTime',
            'app.decision.condition.IsSpringboard',
            'app.decision.condition.IsSpringboardReady',
            'app.decision.condition.IsStandGm81_004',
            'app.decision.condition.IsStandOnCharacter',
            'app.decision.condition.IsStandby',
            'app.decision.condition.IsStandbyParty',
            'app.decision.condition.IsStatusConditionCausedCharacterId',
            'app.decision.condition.IsStockSpell',
            'app.decision.condition.IsStrayPawnFirstTime',
            'app.decision.condition.IsStrayPawnFirstTimeForPawnTalkEventHire',
            'app.decision.condition.IsSuggestGuid',
            'app.decision.condition.IsTalkEventSpeaker',
            'app.decision.condition.IsTalkingCharacter',
            'app.decision.condition.IsTalkingPlayer',
            'app.decision.condition.IsTargetQuestDeliveryDestinationInTown',
            'app.decision.condition.IsTargetQuestDestinationInTown',
            'app.decision.condition.IsUnbalance',
            'app.decision.condition.IsUnderRoof',
            'app.decision.condition.IsUseItemAction',
            'app.decision.condition.IsWaitGm80_004ControlChange',
            'app.decision.condition.IsWaitGm80_094Interact',
            'app.decision.condition.IsWarningProcessingWeightValueForAI',
            'app.decision.condition.IsWrestling',
            'app.decision.condition.ItemHave',
            'app.decision.condition.ItemUse',
            'app.decision.condition.JobChange',
            'app.decision.condition.JobType',
            'app.decision.condition.LanternState',
            'app.decision.condition.LastWithdrawalReason',
            'app.decision.condition.LevelUpCharacter',
            'app.decision.condition.LocalWeather',
            'app.decision.condition.NegationableCondition',
            'app.decision.condition.NoChangePartyTime',
            'app.decision.condition.NpcBB_Bool',
            'app.decision.condition.NpcBB_String',
            'app.decision.condition.NumPartyPawnClimbing',
            'app.decision.condition.OrderedFromPalyer',
            'app.decision.condition.OxcartAvoidState',
            'app.decision.condition.OxcartDriverSeatedPrecondition',
            'app.decision.condition.OxcartRide',
            'app.decision.condition.OxcartStatus',
            'app.decision.condition.OxcartStatusRoutineID',
            'app.decision.condition.Oxcart_ForcedBreakThrough',
            'app.decision.condition.Oxcart_PlayerInSpeaking',
            'app.decision.condition.PLPartyNum',
            'app.decision.condition.PLRecoverableHP',
            'app.decision.condition.PLisInDungeon',
            'app.decision.condition.PartyCustomSkill',
            'app.decision.condition.PartyIsLastFerrystoneSuccess',
            'app.decision.condition.PartyIsLastPortCrystalSuccess',
            'app.decision.condition.PartyMemberCharacterType',
            'app.decision.condition.PartyMemberGender',
            'app.decision.condition.PartyMemberJob',
            'app.decision.condition.PartyNormalSkill',
            'app.decision.condition.PartyNumOfEnemies',
            'app.decision.condition.PartyOrderedFromPalyer',
            'app.decision.condition.PartySlopeAngle',
            'app.decision.condition.PartySubPawnBattleWinCount',
            'app.decision.condition.PartySubPawnDownCount',
            'app.decision.condition.PartySubPawnHireDays',
            'app.decision.condition.PawnBadge',
            'app.decision.condition.PawnBattleState',
            'app.decision.condition.PawnConnectNaviToPL',
            'app.decision.condition.PawnConnectWayPointToPL',
            'app.decision.condition.PawnCoolTimer',
            'app.decision.condition.PawnCustomSkill',
            'app.decision.condition.PawnDragonPossessionLevel',
            'app.decision.condition.PawnFavorbility',
            'app.decision.condition.PawnFirstJobType',
            'app.decision.condition.PawnForcedWaitEvent',
            'app.decision.condition.PawnHasKeyItem',
            'app.decision.condition.PawnIsCausedDragonPossessionEvent',
            'app.decision.condition.PawnIsEquipmentChanged',
            'app.decision.condition.PawnIsLastDragonPossessionEventBadEnding',
            'app.decision.condition.PawnIsRecentDamageType',
            'app.decision.condition.PawnLastKillCharacter',
            'app.decision.condition.PawnNormalSkill',
            'app.decision.condition.PawnPartyCompareLevel',
            'app.decision.condition.PawnPartyOxcartRaidHistoryCheck',
            'app.decision.condition.PawnPartyOxcartRideCheck',
            'app.decision.condition.PawnPartyPersonality',
            'app.decision.condition.PawnPartyRecentShopping',
            'app.decision.condition.PawnPartyRecentTreasureBoxNum',
            'app.decision.condition.PawnPartyStatusCheck',
            'app.decision.condition.PawnPartyStatusCondition',
            'app.decision.condition.PawnReceivedKeyItemFromPL',
            'app.decision.condition.PawnSubskill',
            'app.decision.condition.PawnTimeSinceLastDragonPossessionEvent',
            'app.decision.condition.PawnTimeSinceLostInterest',
            'app.decision.condition.PawnTimeSinceStatueInterest',
            'app.decision.condition.PawnTravelogue',
            'app.decision.condition.Personality',
            'app.decision.condition.PlayTime',
            'app.decision.condition.PlayerArea',
            'app.decision.condition.PlayerDangerArea',
            'app.decision.condition.PlayerDashTime',
            'app.decision.condition.PlayerFrontRoadWidth',
            'app.decision.condition.PlayerJob',
            'app.decision.condition.PlayerJobAny',
            'app.decision.condition.PlayerJobRank',
            'app.decision.condition.PlayerLevel',
            'app.decision.condition.PlayerLocalArea',
            'app.decision.condition.PlayerUIArea',
            'app.decision.condition.PlayerUIAreaIsDungeon',
            'app.decision.condition.PlayerWarped',
            'app.decision.condition.PlayerWorldArea',
            'app.decision.condition.PrepareSkillRate',
            'app.decision.condition.PreviousDefeatCharacter',
            'app.decision.condition.QuestKnowledge',
            'app.decision.condition.QuestLog',
            'app.decision.condition.QuestVariable',
            'app.decision.condition.ReactionCircle',
            'app.decision.condition.Recognition',
            'app.decision.condition.RecognitionForObject',
            'app.decision.condition.RecoverableHP',
            'app.decision.condition.ScarNum',
            'app.decision.condition.SelfArea',
            'app.decision.condition.SelfCharacterType',
            'app.decision.condition.SelfGender',
            'app.decision.condition.SelfLocalArea',
            'app.decision.condition.SelfWorldArea',
            'app.decision.condition.SensedSpatialEvent',
            'app.decision.condition.Situation',
            'app.decision.condition.SituationBB_Bool',
            'app.decision.condition.SlopeAngle',
            'app.decision.condition.SpaceWatch',
            'app.decision.condition.SpecialBattleFlag',
            'app.decision.condition.SpringboradType',
            'app.decision.condition.Stamina',
            'app.decision.condition.State',
            'app.decision.condition.StatusCondition',
            'app.decision.condition.Stroll',
            'app.decision.condition.SuddenQuestTalkSituation',
            'app.decision.condition.TalkEvent',
            'app.decision.condition.TalkGreetTodayCount',
            'app.decision.condition.TalkingAvoidState',
            'app.decision.condition.TargetQuest',
            'app.decision.condition.TaskDecisionSelect',
            'app.decision.condition.Time',
            'app.decision.condition.TimeBetween',
            'app.decision.condition.TimeFromLostMainPawn',
            'app.decision.condition.TimeFromLostSubPawn',
            'app.decision.condition.TimeSinceBattleWinFinish',
            'app.decision.condition.Timetable',
            'app.decision.condition.UnrecoverableHP',
            'app.decision.condition.Weather',
            'app.decision.condition.WeatherChange',
            'app.decision.condition.WeightRank',
            'app.decision.condition.hasAIGoalData',
            'app.decision.condition.isCustomSkillReachLevel2',
            'app.decision.condition.isNPCRelationDead',
            'app.decision.condition.isNPCSentimentLikeToPL',
            'app.decision.condition.isNPCTaskLostDestination',
            'app.decision.condition.isNPCTaskOverwrite',
            'app.decision.condition.isNPCVisionPL',
            'app.decision.condition.isQuestMember',
            'app.decision.condition.isReactionCover',
        },
    },
    ['app.decision.tcondition.ConditionBase'] = {
        abstract = {
            'app.decision.tcondition.AIState',
            'app.decision.tcondition.ActionBB_AT',
            'app.decision.tcondition.ActionBB_Bool',
            'app.decision.tcondition.ActionBB_Go',
            'app.decision.tcondition.Around',
            'app.decision.tcondition.AroundSelf',
            'app.decision.tcondition.CanAttackCh252HideMedal',
            'app.decision.tcondition.CanCatch',
            'app.decision.tcondition.CanCh259FootClimbTarget',
            'app.decision.tcondition.CanFurtherAttack',
            'app.decision.tcondition.CanHealWet',
            'app.decision.tcondition.CanMultipleSpell',
            'app.decision.tcondition.CanWrestle',
            'app.decision.tcondition.CanWrestleAttract',
            'app.decision.tcondition.Ch258WarpPointDistance',
            'app.decision.tcondition.Ch259ActionEnabled',
            'app.decision.tcondition.CharacterTempStatus',
            'app.decision.tcondition.CheckOrder',
            'app.decision.tcondition.CheckUniqueActionType',
            'app.decision.tcondition.ClimbDistance',
            'app.decision.tcondition.Climbable',
            'app.decision.tcondition.ClimbedRegion',
            'app.decision.tcondition.CombatState',
            'app.decision.tcondition.CommonBB_Go',
            'app.decision.tcondition.Composite',
            'app.decision.tcondition.ConciergePause',
            'app.decision.tcondition.Condition',
            'app.decision.tcondition.Conversation_OxcartActive',
            'app.decision.tcondition.DamageType',
            'app.decision.tcondition.DecisionSelect',
            'app.decision.tcondition.Distance',
            'app.decision.tcondition.DistanceByTargetType',
            'app.decision.tcondition.DistanceFromLastGround',
            'app.decision.tcondition.DistanceFromPlayer',
            'app.decision.tcondition.DistanceFromTargetGeneralPoint',
            'app.decision.tcondition.DistanceGameObjectFromPlayer',
            'app.decision.tcondition.DistanceRange',
            'app.decision.tcondition.DistanceRangeByTargetType',
            'app.decision.tcondition.DistanceYRange',
            'app.decision.tcondition.DotFromTargetAxisZ',
            'app.decision.tcondition.DressCodeLevel',
            'app.decision.tcondition.DroppableItemGimmickType',
            'app.decision.tcondition.ForceReceived',
            'app.decision.tcondition.ForcedCount',
            'app.decision.tcondition.ForwardOf',
            'app.decision.tcondition.GeneralPointHeight',
            'app.decision.tcondition.GuardBitNum',
            'app.decision.tcondition.HasPawnGoal',
            'app.decision.tcondition.HasQuestLayerTask',
            'app.decision.tcondition.HateValue',
            'app.decision.tcondition.HaveAITaskSituationSelf',
            'app.decision.tcondition.HaveCh2WeaknessAttack',
            'app.decision.tcondition.HighTouchType',
            'app.decision.tcondition.Hp',
            'app.decision.tcondition.HumanTempStatus',
            'app.decision.tcondition.ImmuneToDamage',
            'app.decision.tcondition.InCamera',
            'app.decision.tcondition.InRangeTask',
            'app.decision.tcondition.InRangeTaskEx',
            'app.decision.tcondition.InteractingTarget',
            'app.decision.tcondition.InteractiveObject',
            'app.decision.tcondition.InteractiveReservation',
            'app.decision.tcondition.IsActiveRageFregrance',
            'app.decision.tcondition.IsAddFlare',
            'app.decision.tcondition.IsAimed',
            'app.decision.tcondition.IsAimedCurrentTarget',
            'app.decision.tcondition.IsAngry',
            'app.decision.tcondition.IsAnyGimmickDetection',
            'app.decision.tcondition.IsAnyGimmickDetectionNotCarried',
            'app.decision.tcondition.IsAroundEnemySpecies',
            'app.decision.tcondition.IsAttackNoticeArea',
            'app.decision.tcondition.IsBadgeQuestTarget',
            'app.decision.tcondition.IsBehindPawnFromPlayer',
            'app.decision.tcondition.IsBoss',
            'app.decision.tcondition.IsBreakBalance',
            'app.decision.tcondition.IsCarry',
            'app.decision.tcondition.IsCatch',
            'app.decision.tcondition.IsCatchTargetType',
            'app.decision.tcondition.IsCatchableTarget',
            'app.decision.tcondition.IsCaught',
            'app.decision.tcondition.IsCaughtBy',
            'app.decision.tcondition.IsCaughtByOther',
            'app.decision.tcondition.IsCaughtBySelf',
            'app.decision.tcondition.IsCh224NotEating',
            'app.decision.tcondition.IsCh226Broken',
            'app.decision.tcondition.IsCh227000MagicSequence',
            'app.decision.tcondition.IsCh228BeforeExplosion',
            'app.decision.tcondition.IsCh250BreakFang',
            'app.decision.tcondition.IsCh250Bridge',
            'app.decision.tcondition.IsCh250FaceArmorCastOffSituation',
            'app.decision.tcondition.IsCh250FaceCatch',
            'app.decision.tcondition.IsCh251LockedGenderTarget',
            'app.decision.tcondition.IsCh251TargetGender',
            'app.decision.tcondition.IsCh252FreezeBody',
            'app.decision.tcondition.IsCh252Head',
            'app.decision.tcondition.IsCh252HideMedal',
            'app.decision.tcondition.IsCh252MedalDestroyNumBelow',
            'app.decision.tcondition.IsCh253FlightHighUp',
            'app.decision.tcondition.IsCh254PriorityTarget',
            'app.decision.tcondition.IsCh255000MagicSequence',
            'app.decision.tcondition.IsCh255HeadTarget',
            'app.decision.tcondition.IsCh255PetrificationIrradiation',
            'app.decision.tcondition.IsCh256Charge',
            'app.decision.tcondition.IsCh257000HeartState',
            'app.decision.tcondition.IsCh257001AcidAttack',
            'app.decision.tcondition.IsCh257Crawling',
            'app.decision.tcondition.IsCh257HypnosisWrestle',
            'app.decision.tcondition.IsCh258000BreathReady',
            'app.decision.tcondition.IsCh258000DownHeartActionStart',
            'app.decision.tcondition.IsCh258000FlightPhase',
            'app.decision.tcondition.IsCh258000Heart',
            'app.decision.tcondition.IsCh258000HeartON',
            'app.decision.tcondition.IsCh258000HeartSequence',
            'app.decision.tcondition.IsCh258000LastPhase',
            'app.decision.tcondition.IsCh258000MagicSequence',
            'app.decision.tcondition.IsCh258000PawnBait',
            'app.decision.tcondition.IsCh259ArmSlam',
            'app.decision.tcondition.IsCh259ClimbTarget',
            'app.decision.tcondition.IsCh259FootTarget',
            'app.decision.tcondition.IsCh259StickRegionNum',
            'app.decision.tcondition.IsCh2FirstTime',
            'app.decision.tcondition.IsCh2Leader',
            'app.decision.tcondition.IsCh2LongRange',
            'app.decision.tcondition.IsCh2WeakToBalance',
            'app.decision.tcondition.IsCh3CombatJob',
            'app.decision.tcondition.IsCharaID',
            'app.decision.tcondition.IsClimbCh59_511',
            'app.decision.tcondition.IsClimbTargetCharacterDead',
            'app.decision.tcondition.IsClimbing',
            'app.decision.tcondition.IsClimbingTarget',
            'app.decision.tcondition.IsCompleteNavigation',
            'app.decision.tcondition.IsConciergeTarget',
            'app.decision.tcondition.IsCrawling',
            'app.decision.tcondition.IsDamage',
            'app.decision.tcondition.IsDead',
            'app.decision.tcondition.IsDecoy',
            'app.decision.tcondition.IsDown',
            'app.decision.tcondition.IsDrawedWeapon',
            'app.decision.tcondition.IsDropItemByOwnAttack',
            'app.decision.tcondition.IsEnableDeadBodyInteract',
            'app.decision.tcondition.IsEnableSpeedEnchant',
            'app.decision.tcondition.IsEnemyHD_LastAreaOnly',
            'app.decision.tcondition.IsEnemySpecies',
            'app.decision.tcondition.IsEnemyTargetAimed',
            'app.decision.tcondition.IsFinishWaitMoveTarget',
            'app.decision.tcondition.IsFinishingMoveAllowed',
            'app.decision.tcondition.IsFinishingMoveRegion',
            'app.decision.tcondition.IsFlying',
            'app.decision.tcondition.IsForbiddenReactionLayerDecision',
            'app.decision.tcondition.IsGatherPoint',
            'app.decision.tcondition.IsGimmickBroken',
            'app.decision.tcondition.IsGimmickChildBroken',
            'app.decision.tcondition.IsGimmickContainedPawnOrderTarget',
            'app.decision.tcondition.IsGimmickDetection',
            'app.decision.tcondition.IsGimmickMeatDetection',
            'app.decision.tcondition.IsGimmickUsed',
            'app.decision.tcondition.IsGm05_046Unlockable',
            'app.decision.tcondition.IsGm05_046Unlocked',
            'app.decision.tcondition.IsGm80_042Valid',
            'app.decision.tcondition.IsGm80_046Push',
            'app.decision.tcondition.IsGm80_094Valid',
            'app.decision.tcondition.IsGm81_005Valid',
            'app.decision.tcondition.IsHaveEnableLantern',
            'app.decision.tcondition.IsHaveTargetHealItem',
            'app.decision.tcondition.IsIdle',
            'app.decision.tcondition.IsImmortality',
            'app.decision.tcondition.IsInBrightPlace',
            'app.decision.tcondition.IsInMyRoom',
            'app.decision.tcondition.IsInWater',
            'app.decision.tcondition.IsInteractGm81_004',
            'app.decision.tcondition.IsInteracting',
            'app.decision.tcondition.IsKeepFormationDistance',
            'app.decision.tcondition.IsKilledByBrine',
            'app.decision.tcondition.IsLastClimbCharaIDBeforeLanding',
            'app.decision.tcondition.IsLoveAngryFace',
            'app.decision.tcondition.IsManualMoveGm81_004',
            'app.decision.tcondition.IsNearByWall',
            'app.decision.tcondition.IsOnBridge',
            'app.decision.tcondition.IsOpenedGm80_001',
            'app.decision.tcondition.IsPLInteractGimmick',
            'app.decision.tcondition.IsPLLastClimbCharaIDBeforeLanding',
            'app.decision.tcondition.IsPartyAroundEnemyBase',
            'app.decision.tcondition.IsPartyHasPawnBadgeAroundEnemyAndTarget',
            'app.decision.tcondition.IsPawnAttackEnemy',
            'app.decision.tcondition.IsPawnOrderTarget',
            'app.decision.tcondition.IsPickUpGimmick',
            'app.decision.tcondition.IsPlayerApproachTarget',
            'app.decision.tcondition.IsPlayerArrivedCh253Nest',
            'app.decision.tcondition.IsPlayerLastContactEnemy',
            'app.decision.tcondition.IsPossess',
            'app.decision.tcondition.IsPossessByChild',
            'app.decision.tcondition.IsPossessedByCh225',
            'app.decision.tcondition.IsPrepareSpell',
            'app.decision.tcondition.IsPreviousTarget',
            'app.decision.tcondition.IsRegionGoalFlag',
            'app.decision.tcondition.IsRescuePawn',
            'app.decision.tcondition.IsRunningOutOfStamina',
            'app.decision.tcondition.IsSelfSearchGimmickFlag',
            'app.decision.tcondition.IsSentimentLevel',
            'app.decision.tcondition.IsSitOnTheGround',
            'app.decision.tcondition.IsSnatchedItem',
            'app.decision.tcondition.IsSpringThrowTarget',
            'app.decision.tcondition.IsSpringboard',
            'app.decision.tcondition.IsSpringboardNotify',
            'app.decision.tcondition.IsStandGimmick',
            'app.decision.tcondition.IsStandGm80_105',
            'app.decision.tcondition.IsStandGm81_004',
            'app.decision.tcondition.IsStandOnCharacter',
            'app.decision.tcondition.IsStatusConditionCausedCharacterId',
            'app.decision.tcondition.IsStatusConditionEnable',
            'app.decision.tcondition.IsSummoned',
            'app.decision.tcondition.IsTalkEventSpeaker',
            'app.decision.tcondition.IsTalkingCharacter',
            'app.decision.tcondition.IsTalkingPlayer',
            'app.decision.tcondition.IsTargetOwnerSelf',
            'app.decision.tcondition.IsTargetType',
            'app.decision.tcondition.IsTired',
            'app.decision.tcondition.IsUnbalance',
            'app.decision.tcondition.IsUniqueActionType',
            'app.decision.tcondition.IsUniqueDieAction',
            'app.decision.tcondition.IsValidCaughtType',
            'app.decision.tcondition.IsWeaponElementType',
            'app.decision.tcondition.JobType',
            'app.decision.tcondition.LanternState',
            'app.decision.tcondition.LocalWeather',
            'app.decision.tcondition.NPC_AwayFromSituationTaskPos',
            'app.decision.tcondition.NPC_CanExecuteQuestLead',
            'app.decision.tcondition.NPC_ConversationObstacleIn',
            'app.decision.tcondition.NPC_ConversationObstacleMid',
            'app.decision.tcondition.NPC_ConversationObstacleMidOx',
            'app.decision.tcondition.NPC_IsHoldingSomething',
            'app.decision.tcondition.NegationableCondition',
            'app.decision.tcondition.NodeTreeDecisionSelect',
            'app.decision.tcondition.NpcBB_Bool',
            'app.decision.tcondition.OxcartAvoidState',
            'app.decision.tcondition.OxcartDriverSeatedPrecondition',
            'app.decision.tcondition.OxcartInBattle',
            'app.decision.tcondition.OxcartInBattleDriver',
            'app.decision.tcondition.OxcartWouldYouLikeToRide',
            'app.decision.tcondition.Oxcart_ForcedBreakThroughRun',
            'app.decision.tcondition.Oxcart_PlayerInSpeaking',
            'app.decision.tcondition.PLPartyOrderByDistance',
            'app.decision.tcondition.PawnBattleState',
            'app.decision.tcondition.PawnConnectNaviToPL',
            'app.decision.tcondition.PawnCustomSkill',
            'app.decision.tcondition.PawnNaviDistance',
            'app.decision.tcondition.PawnOrderTargetNum',
            'app.decision.tcondition.PawnTalkCh2Resistance',
            'app.decision.tcondition.PawnTalkCh2Weakness',
            'app.decision.tcondition.Personality',
            'app.decision.tcondition.PlayerJobType',
            'app.decision.tcondition.PlayerLastAttackObject',
            'app.decision.tcondition.PlayerLastAttackTarget',
            'app.decision.tcondition.PrepareSkillRate',
            'app.decision.tcondition.PsychoShoot',
            'app.decision.tcondition.Pulling',
            'app.decision.tcondition.PushAndPullableAvailableReserved',
            'app.decision.tcondition.PushAndPullableReserved',
            'app.decision.tcondition.PushAndPullableReservedInPlayer',
            'app.decision.tcondition.Pushing',
            'app.decision.tcondition.QuestVariable',
            'app.decision.tcondition.RayCheck',
            'app.decision.tcondition.ReachableCoopActionGimmick',
            'app.decision.tcondition.ReactionCircle',
            'app.decision.tcondition.ReactionCircleDistance',
            'app.decision.tcondition.RecoveryStatus',
            'app.decision.tcondition.ReducedHp',
            'app.decision.tcondition.RegionEfficacyLevel',
            'app.decision.tcondition.SafeGroundCheck',
            'app.decision.tcondition.ScaleType',
            'app.decision.tcondition.SelfActionBB_Bool',
            'app.decision.tcondition.SelfReducedHp',
            'app.decision.tcondition.SeqBalance',
            'app.decision.tcondition.SitOnChair',
            'app.decision.tcondition.Situation',
            'app.decision.tcondition.SituationBB_Go',
            'app.decision.tcondition.SpatialEvent',
            'app.decision.tcondition.SpecialBattleFlag',
            'app.decision.tcondition.SpringReceptionistTime',
            'app.decision.tcondition.State',
            'app.decision.tcondition.StatusCondition',
            'app.decision.tcondition.StatusConditionAndDown',
            'app.decision.tcondition.TalkingAvoidState',
            'app.decision.tcondition.TargetSpatialEventSender',
            'app.decision.tcondition.TaskDecisionSelect',
            'app.decision.tcondition.Weakness',
            'app.decision.tcondition.WeightRank',
            'app.decision.tcondition.hasBadgeTarget',
            'app.decision.tcondition.isEnableMeteorFall',
            'app.decision.tcondition.isNPCSensorContact',
            'app.decision.tcondition.isPawnTalkTargetGimmick',
            'app.decision.tcondition.isPlayerContactEnemiesIfNeeded',
            'app.decision.tcondition.isReachableGm80_001',
            'app.decision.tcondition.isReserved',
            'app.decision.tcondition.isSelfCustomSkillReachLevel2',
        },
    },
    ['app.decision.process.ProcessBase'] = {
        abstract = {
            'app.decision.process.AddDecisionPack',
            'app.decision.process.AddSelectedDecisionPack',
            'app.decision.process.BBActionBool',
            'app.decision.process.BBFormationBool',
            'app.decision.process.BBNpcBool',
            'app.decision.process.BBSituationBool',
            'app.decision.process.CancelInteractReserve',
            'app.decision.process.CancelSpringJumpNotify',
            'app.decision.process.CarryEnd',
            'app.decision.process.ChangeAutoSwitchWaypoint',
            'app.decision.process.ChangeAvoidTarget',
            'app.decision.process.ChangeEnableForcedMoveOnGimmick',
            'app.decision.process.ChangeNavigationFilter0',
            'app.decision.process.ChangeNavigationFilter1',
            'app.decision.process.ChangePawnEnableTurnToPlayer',
            'app.decision.process.ChangePawnLookAtTalkTarget',
            'app.decision.process.ChangeUseNavigation',
            'app.decision.process.ChangeWallAndFallSetting',
            'app.decision.process.CheckClimbSpringboardJumpSuccess',
            'app.decision.process.EndAction',
            'app.decision.process.EndFinishWaitMove',
            'app.decision.process.EndProcess_Greet_NPCtoPL',
            'app.decision.process.EndProcess_ReactionCircle_BreakInto_HotSpring_TypeA',
            'app.decision.process.EndProcess_SitOnChair_ReadBookOnTable',
            'app.decision.process.EndProcess_Snatch',
            'app.decision.process.IncrementTalkGreetCount',
            'app.decision.process.InteractCnacel',
            'app.decision.process.InteractRelease',
            'app.decision.process.NavigationEndUnderSearchLength',
            'app.decision.process.NotifyEndProcess',
            'app.decision.process.NotifyStartProcess',
            'app.decision.process.NpcTalk',
            'app.decision.process.NpcTalk_Greet_PlToNPC',
            'app.decision.process.OrderWait',
            'app.decision.process.OxCartDriverWiplash',
            'app.decision.process.PawnEndActionEvent',
            'app.decision.process.PawnHateToGoTalk',
            'app.decision.process.PawnHelpTalk',
            'app.decision.process.PawnMoveIdleEnd',
            'app.decision.process.PawnSearchGimmickTalk',
            'app.decision.process.PawnTacticalAreaEnable',
            'app.decision.process.PawnTalk',
            'app.decision.process.Process_ShellReaction',
            'app.decision.process.PushAndPullRelease',
            'app.decision.process.RemoveDecisionPack',
            'app.decision.process.RequestIdle',
            'app.decision.process.ResetDecisionSelect',
            'app.decision.process.ResetOrderGimmickTarget',
            'app.decision.process.ResetPair',
            'app.decision.process.ResetPawnPassItemFlag',
            'app.decision.process.ResetSkillCount',
            'app.decision.process.SetAIState',
            'app.decision.process.SetAttackRange',
            'app.decision.process.SetEnableAppObstacleAvoidanceProp',
            'app.decision.process.SetIsPlayingFlag_TaskStatePlayActionID',
            'app.decision.process.SetMaxWeightOnPress',
            'app.decision.process.SetNavigationType',
            'app.decision.process.SetSpringJumpNotifyPlayer',
            'app.decision.process.StartProcess_Avoid_Usual_ElfVillage',
            'app.decision.process.StartProcess_Caution',
            'app.decision.process.UseItemAction',
            'app.decision.process.requestPawnViewCoolTime',
            'app.decision.process.resetSpringboardType',
            'app.decision.process.setEnableMoveCheckDamageArea',
            'app.decision.process.setMovableIfNaviFailed',
            'app.decision.process.setMultipleSpellDecisionFlag',
            'app.decision.process.setSafetyPositionEnable',
            'app.decision.process.setSearchGimmickFlag',
            'app.decision.process.setSpringboardReady',
            'app.decision.process.setTravelogueFlag',
        },
    },

    ['app.quest.action.ForceBattleMode'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.GuiMapRelease'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.QuestFerrystoneControl'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.QuestRuleControl'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.ReactionCircle'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction006'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction027'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction028'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction034'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction036'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction039'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction044'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction046'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction047'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction048'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction049'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction050'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction051'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction052'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction053'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction054'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction055'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction057'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction060'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction061'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction062'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction064'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction065'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction066'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction068'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction069'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction071'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction072'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.action.UniqueAction074'] = { fields = { _Param = quest_action_Param_parent_accessors } },
    ['app.quest.condition.NpcOverrideCondition.ConditionEntityBase'] = {
        abstract = {
            'app.quest.condition.NpcOverrideCondition.CheckCondiiton.Entity',
            'app.quest.condition.NpcOverrideCondition.CheckTimeOfDay.Entity',
            'app.quest.condition.NpcOverrideCondition.CheckVariable.Entity',
        },
    },
    ['app.actinter.cmd.CommandBase'] = {
        abstract = {
            'app.actinter.cmd.ActByWeaponEquipment',
            'app.actinter.cmd.ActInterCommand_SensorContact',
            'app.actinter.cmd.ActInterFindPlayerCallGuard',
            'app.actinter.cmd.ActInterPlayActionID',
            'app.actinter.cmd.ActInterPlayActionIDOnce',
            'app.actinter.cmd.ActInterPlayActionIDRandom',
            'app.actinter.cmd.ActInterPlayActionID_ForInstrumentAction',
            'app.actinter.cmd.ActLoop',
            'app.actinter.cmd.ActLoopHoming',
            'app.actinter.cmd.ActNo',
            'app.actinter.cmd.ActNoHoming',
            'app.actinter.cmd.ActNoHomingDuration',
            'app.actinter.cmd.ActNoRandom',
            'app.actinter.cmd.ActNoScopeEvent',
            'app.actinter.cmd.ApproachStep',
            'app.actinter.cmd.Approach_OxCart',
            'app.actinter.cmd.BattleNPCMoveStrafe',
            'app.actinter.cmd.CarryBegin',
            'app.actinter.cmd.CarryEnd',
            'app.actinter.cmd.CarryObject',
            'app.actinter.cmd.Caught',
            'app.actinter.cmd.Ch253QuestAction',
            'app.actinter.cmd.Ch253TalkEventAction',
            'app.actinter.cmd.Dead',
            'app.actinter.cmd.DrawGm80_046',
            'app.actinter.cmd.DrawWeapon',
            'app.actinter.cmd.EmptyCommand',
            'app.actinter.cmd.EndCharacterAction',
            'app.actinter.cmd.EndClimb',
            'app.actinter.cmd.EndHumanAction',
            'app.actinter.cmd.Fistpump',
            'app.actinter.cmd.ForceCarry',
            'app.actinter.cmd.ForceHoldDown',
            'app.actinter.cmd.ForceInteractGimmick',
            'app.actinter.cmd.ForcedAnimation',
            'app.actinter.cmd.GuardCatch',
            'app.actinter.cmd.HandTouch',
            'app.actinter.cmd.HateReactionEnd',
            'app.actinter.cmd.HateReactionTurnOnSpot',
            'app.actinter.cmd.HighTouchBase',
            'app.actinter.cmd.HighTouchWait',
            'app.actinter.cmd.HumanCatch',
            'app.actinter.cmd.HumanTurnOnSpot',
            'app.actinter.cmd.HumanTurnOnSpot_GimmickInteractSchedule',
            'app.actinter.cmd.Idle',
            'app.actinter.cmd.InteractBegin',
            'app.actinter.cmd.InteractBegin_GimmickInteractSchedule',
            'app.actinter.cmd.InteractCancel',
            'app.actinter.cmd.InteractDeadBody',
            'app.actinter.cmd.InteractEnd',
            'app.actinter.cmd.InteractLoop',
            'app.actinter.cmd.InteractReserve',
            'app.actinter.cmd.InteractReserveOxcart',
            'app.actinter.cmd.InteractReservePointNo',
            'app.actinter.cmd.Interacting',
            'app.actinter.cmd.InteractingLowerBody',
            'app.actinter.cmd.Interacting_GimmickInteractSchedule',
            'app.actinter.cmd.Job02_HipNormalAttack',
            'app.actinter.cmd.Jump',
            'app.actinter.cmd.JumpGrab',
            'app.actinter.cmd.LivGreet',
            'app.actinter.cmd.LivHumanIdleCombat',
            'app.actinter.cmd.LivNPCIdle',
            'app.actinter.cmd.LivNPCIdleTalk',
            'app.actinter.cmd.LivNPCIdle_CheerFight',
            'app.actinter.cmd.LivNPCIdle_FearFight',
            'app.actinter.cmd.LivNPCIdle_SpecialCommand',
            'app.actinter.cmd.LivNPCIdle_SpyAfterEscape',
            'app.actinter.cmd.LivNPCIdle_WatchCorpse_Friend',
            'app.actinter.cmd.LivNPCIdle_WatchCorpse_LargeMonster',
            'app.actinter.cmd.LivNPCIdle_WatchCorpse_SmallMonster',
            'app.actinter.cmd.LivNPCIdle_WatchCorpse_Stranger',
            'app.actinter.cmd.LivPawnAction',
            'app.actinter.cmd.LivPawnActionBase',
            'app.actinter.cmd.LivPawnConciergeAction',
            'app.actinter.cmd.LivSitSeat',
            'app.actinter.cmd.LivSitSeat_ReadBookOnTable',
            'app.actinter.cmd.LivTalkEventAction',
            'app.actinter.cmd.LivUpperBodyAction',
            'app.actinter.cmd.LookAtTarget',
            'app.actinter.cmd.MonsterActType',
            'app.actinter.cmd.MoveStrafe',
            'app.actinter.cmd.NPCTaskCarryObject',
            'app.actinter.cmd.NormalAttack',
            'app.actinter.cmd.PairMotionNotify',
            'app.actinter.cmd.PairMotionWait',
            'app.actinter.cmd.PointHand',
            'app.actinter.cmd.PointHandSuggestGuide',
            'app.actinter.cmd.Pull',
            'app.actinter.cmd.Push',
            'app.actinter.cmd.PushAndPullObject',
            'app.actinter.cmd.PushAndPullObjectStart',
            'app.actinter.cmd.PushAndPullRelease',
            'app.actinter.cmd.PushAndPullReserve',
            'app.actinter.cmd.Qu020280_Move',
            'app.actinter.cmd.Qu020280_StrafeMoveToBack',
            'app.actinter.cmd.RequestUpperBodyAction',
            'app.actinter.cmd.Rotation',
            'app.actinter.cmd.SheatheWeapon',
            'app.actinter.cmd.SpringJumpNotify',
            'app.actinter.cmd.Springboard',
            'app.actinter.cmd.SpringboardJump',
            'app.actinter.cmd.Talk',
            'app.actinter.cmd.TalkTo',
            'app.actinter.cmd.Throw',
            'app.actinter.cmd.ThrowAnimal',
            'app.actinter.cmd.ThrowAtTargetFar',
            'app.actinter.cmd.TurnLantern',
            'app.actinter.cmd.TurnOnSpot',
            'app.actinter.cmd.UseHealItem',
            'app.actinter.cmd.WaitThinking_AfterBattleWinFinishReaction',
            'app.actinter.cmd.WaitThinking_AfterReaction',
            'app.actinter.cmd.WaitThinking_AfterSnatchReaction',
            'app.actinter.cmd.WaitThinking_AfterSurpriseToTarget',
            'app.actinter.cmd.WaitThinking_Caution_AfterFear',
            'app.actinter.cmd.WaitThinking_Caution_AfterStrafe',
            'app.actinter.cmd.WaitThinking_Quest_TalkGreet',
            'app.actinter.cmd.WaitThinking_ReactionCircle',
            'app.actinter.cmd.WaitThinking_TalkGreet',
            'app.actinter.cmd.Warp',
            'app.actinter.cmd.WarpMove',
            'app.actinter.cmd.WaveHands',
            'app.actinter.cmd.Wrestle',
            'app.actinter.cmd.ch226.EndHumanAction',
            'app.actinter.cmd.ch252HeadControl',
            'app.actinter.cmd.human.Ch259Climb',
            'app.actinter.cmd.human.Climb',
            'app.actinter.cmd.human.EndAction',
            'app.actinter.cmd.human.PassGatherHealItem',
            'app.actinter.cmd.human.PassItemBase',
            'app.actinter.cmd.human.PutDown',
            'app.actinter.cmd.human.PutItemBase',
            'app.actinter.cmd.human.PutMeat',
            'app.actinter.cmd.human.SortInventory',
            'app.actinter.cmd.humanenemyjob.EnemyCloseHeavyAttack',
            'app.actinter.cmd.humanenemyjob.EnemyCloseNormalAttack',
            'app.actinter.cmd.humanenemyjob.HumanEnemyActNo',
            'app.actinter.cmd.humanenemyjob.HumanEnemyAttackBase',
            'app.actinter.cmd.humanenemyjob.LocomotiveChargeAttack',
            'app.actinter.cmd.humanenemyjob.ReleaseAttack',
            'app.actinter.cmd.job.AttackBase',
            'app.actinter.cmd.job.ChargeAttack',
            'app.actinter.cmd.job.ComboAttack',
            'app.actinter.cmd.job.ContinuousSkillCombo',
            'app.actinter.cmd.job.CustomSkillBase',
            'app.actinter.cmd.job.CustomSkillStandardBase',
            'app.actinter.cmd.job.HeavyAttack',
            'app.actinter.cmd.job.JobCommonBase',
            'app.actinter.cmd.job.JumpAttack',
            'app.actinter.cmd.job.JumpHeavyAttack',
            'app.actinter.cmd.job.NormalAttack',
            'app.actinter.cmd.job.SkillCombo',
            'app.actinter.cmd.job01.BlinkStrike',
            'app.actinter.cmd.job01.BravesRaid',
            'app.actinter.cmd.job01.CymbalAttack',
            'app.actinter.cmd.job01.DivineDefense',
            'app.actinter.cmd.job01.FallGuard',
            'app.actinter.cmd.job01.FullMoonGuard',
            'app.actinter.cmd.job01.FullMoonSlash',
            'app.actinter.cmd.job01.Guard',
            'app.actinter.cmd.job01.GuardCustomSkillBase',
            'app.actinter.cmd.job01.HindsightSlash',
            'app.actinter.cmd.job01.RisingLunge',
            'app.actinter.cmd.job01.ShieldCounter',
            'app.actinter.cmd.job01.ShieldSummons',
            'app.actinter.cmd.job01.Springboard',
            'app.actinter.cmd.job01.SpringboardBase',
            'app.actinter.cmd.job01.TuskToss',
            'app.actinter.cmd.job01.ViolentStab',
            'app.actinter.cmd.job01.ViolentStabCombo',
            'app.actinter.cmd.job02.Aim',
            'app.actinter.cmd.job02.AimedShot',
            'app.actinter.cmd.job02.AirShootAfterMeleeAttack',
            'app.actinter.cmd.job02.BodyBinder',
            'app.actinter.cmd.job02.ClimbSpecialAllowBomb',
            'app.actinter.cmd.job02.ClimbSpecialAllowOil',
            'app.actinter.cmd.job02.ClimbSpecialAllowPoison',
            'app.actinter.cmd.job02.ClimbSpecialAllowWater',
            'app.actinter.cmd.job02.ContinuousAimedShot',
            'app.actinter.cmd.job02.CustomSkillStandardBase',
            'app.actinter.cmd.job02.DashJumpAttack',
            'app.actinter.cmd.job02.FullBend',
            'app.actinter.cmd.job02.FullBlast',
            'app.actinter.cmd.job02.Job02AttackBase',
            'app.actinter.cmd.job02.Job02Base',
            'app.actinter.cmd.job02.MeteorShot',
            'app.actinter.cmd.job02.RandomShot',
            'app.actinter.cmd.job02.RandomShotCombo',
            'app.actinter.cmd.job02.SpecialAllowBomb',
            'app.actinter.cmd.job02.SpecialAllowOil',
            'app.actinter.cmd.job02.SpecialAllowPoison',
            'app.actinter.cmd.job02.SpecialAllowWater',
            'app.actinter.cmd.job02.ThreefoldArrow',
            'app.actinter.cmd.job02.TriadShot',
            'app.actinter.cmd.job02.WhirlingArrow',
            'app.actinter.cmd.job03.ComboAttack',
            'app.actinter.cmd.job03.CureSpot',
            'app.actinter.cmd.job03.CustomSkillConcentrateBase',
            'app.actinter.cmd.job03.CustomSkillStandardBase',
            'app.actinter.cmd.job03.FireBoon',
            'app.actinter.cmd.job03.Firestorm',
            'app.actinter.cmd.job03.Frigor',
            'app.actinter.cmd.job03.FullRecover',
            'app.actinter.cmd.job03.GuardBit',
            'app.actinter.cmd.job03.HasteSpot',
            'app.actinter.cmd.job03.HolyGlare',
            'app.actinter.cmd.job03.HolyShine',
            'app.actinter.cmd.job03.IceBoon',
            'app.actinter.cmd.job03.Levin',
            'app.actinter.cmd.job03.LevinCombo',
            'app.actinter.cmd.job03.Levitate',
            'app.actinter.cmd.job03.LevitateStart',
            'app.actinter.cmd.job03.NormalAttack',
            'app.actinter.cmd.job03.PowerShot',
            'app.actinter.cmd.job03.SpellBreak',
            'app.actinter.cmd.job03.SpellStockCancel',
            'app.actinter.cmd.job03.SpellStockRelease',
            'app.actinter.cmd.job03.ThunderBoon',
            'app.actinter.cmd.job04.AbsoluteAvoidance',
            'app.actinter.cmd.job04.Attract',
            'app.actinter.cmd.job04.BreakFall',
            'app.actinter.cmd.job04.CuttingWind',
            'app.actinter.cmd.job04.Dodge',
            'app.actinter.cmd.job04.FakeMaster',
            'app.actinter.cmd.job04.FlameBlade',
            'app.actinter.cmd.job04.Guillotine',
            'app.actinter.cmd.job04.HollowOut',
            'app.actinter.cmd.job04.Job04Base',
            'app.actinter.cmd.job04.Job04EndLoopAttack',
            'app.actinter.cmd.job04.LoopAttack',
            'app.actinter.cmd.job04.ParryCounter',
            'app.actinter.cmd.job04.RemoteBomb',
            'app.actinter.cmd.job04.SmokeScreen',
            'app.actinter.cmd.job04.Snatch',
            'app.actinter.cmd.job04.Stealth',
            'app.actinter.cmd.job04.WindWave',
            'app.actinter.cmd.job05.ArcOfObliteration',
            'app.actinter.cmd.job05.CounterAttack',
            'app.actinter.cmd.job05.CrescentSlash',
            'app.actinter.cmd.job05.CycloneSlash',
            'app.actinter.cmd.job05.GroundDrill',
            'app.actinter.cmd.job05.Guts',
            'app.actinter.cmd.job05.HeavyRunningThrust',
            'app.actinter.cmd.job05.HorizontalSlash',
            'app.actinter.cmd.job05.IndomitableLash',
            'app.actinter.cmd.job05.Job05AttackBase',
            'app.actinter.cmd.job05.Job05Base',
            'app.actinter.cmd.job05.Job05ChargeCustomSkillBase',
            'app.actinter.cmd.job05.Job05ReleaseAttack',
            'app.actinter.cmd.job05.Job05Springboard',
            'app.actinter.cmd.job05.LandSlide',
            'app.actinter.cmd.job05.SpeedCombo',
            'app.actinter.cmd.job05.Tackle',
            'app.actinter.cmd.job05.WarCry',
            'app.actinter.cmd.job06.AddFlare',
            'app.actinter.cmd.job06.Blizzard',
            'app.actinter.cmd.job06.BurstShot',
            'app.actinter.cmd.job06.Job06Base',
            'app.actinter.cmd.job06.MeteorFall',
            'app.actinter.cmd.job06.MineVolt',
            'app.actinter.cmd.job06.Repair',
            'app.actinter.cmd.job06.RockBeat',
            'app.actinter.cmd.job06.SaintDrain',
            'app.actinter.cmd.job06.Salamander',
            'app.actinter.cmd.job06.VortexRage',
            'app.actinter.cmd.job07.Blade',
            'app.actinter.cmd.job07.DragonStinger',
            'app.actinter.cmd.job07.Job07Base',
            'app.actinter.cmd.job07.MagicBind',
            'app.actinter.cmd.job07.SpiralSlash',
            'app.actinter.cmd.job08.Job08Base',
            'app.actinter.cmd.job08.Job08CustomSkill',
            'app.actinter.cmd.monster.Guard',
            'app.actinter.cmd.monster.JumpRequest',
            'app.actinter.cmd.monster.MonsterCommandBase',
            'app.actinter.cmd.monster.SelfSleep',
            'app.actinter.cmd.move.AlignmentMove',
            'app.actinter.cmd.move.AlignmentMove24schedule',
            'app.actinter.cmd.move.Approach',
            'app.actinter.cmd.move.ApproachCover',
            'app.actinter.cmd.move.ApproachEscapePoint',
            'app.actinter.cmd.move.ApproachOxcertEntrance',
            'app.actinter.cmd.move.ApproachPrepare',
            'app.actinter.cmd.move.ApproachReservedPoint',
            'app.actinter.cmd.move.ApproachStrafe',
            'app.actinter.cmd.move.ApproachTargetAroundPoint',
            'app.actinter.cmd.move.ApproachToGeneratePos',
            'app.actinter.cmd.move.ApproachUntilRayHit',
            'app.actinter.cmd.move.Climing',
            'app.actinter.cmd.move.ClingCliff',
            'app.actinter.cmd.move.EndClimingCh259',
            'app.actinter.cmd.move.EscapeToCh251',
            'app.actinter.cmd.move.GetOffGm80_048',
            'app.actinter.cmd.move.GetOffOxcart',
            'app.actinter.cmd.move.InteractAlignmentMove',
            'app.actinter.cmd.move.InteractAlignmentMove_GimmickInteractSchedule',
            'app.actinter.cmd.move.InteractApproach',
            'app.actinter.cmd.move.KeepDistance',
            'app.actinter.cmd.move.KeepDistanceFromRoot',
            'app.actinter.cmd.move.LivApproacSneaking',
            'app.actinter.cmd.move.LivApproach',
            'app.actinter.cmd.move.LivApproachStep',
            'app.actinter.cmd.move.LivApproachStep_CasualEscape',
            'app.actinter.cmd.move.LivApproachStep_CautionEscape',
            'app.actinter.cmd.move.LivApproachStep_CombatEscape',
            'app.actinter.cmd.move.LivApproachStep_Guide',
            'app.actinter.cmd.move.LivApproach_OxcartInteractPointNumber',
            'app.actinter.cmd.move.LivApproach_SyncroMove',
            'app.actinter.cmd.move.LivMoveBase',
            'app.actinter.cmd.move.MoveBase',
            'app.actinter.cmd.move.MoveByDecoratorAngle',
            'app.actinter.cmd.move.MoveRoot',
            'app.actinter.cmd.move.MoveToGimmickRelayPoint',
            'app.actinter.cmd.move.MoveToGm81_004Entrance',
            'app.actinter.cmd.move.MoveToSituationTaskTarget',
            'app.actinter.cmd.move.SearchEscapePoint',
            'app.actinter.cmd.move.StrafeKeepDistance',
            'app.actinter.cmd.move.Straight',
            'app.actinter.cmd.move.StraightToTarget',
        }
    },
    ['app.generate.refill.condition.RefillConditionBase'] = {
        abstract = {
            'app.generate.refill.condition.GroupDeadCount',
        }
    },
    ['app.generate.refill.action.RefillActionBase'] = {
        abstract = {
            'app.generate.refill.action.GroupGenerate',
            'app.generate.refill.action.MultiGroupGenerate',
        }
    },
    ['app.ItemCommonParam'] = {
        abstract = {
            'app.ItemDataParam',
            'app.ItemWeaponParam',
            'app.ItemArmorParam',
        }
    },
    ['app.TalkEventSegmentNode'] = {
        abstract = {
            'app.AudienceReactionNode',
            'app.BarTimeSkipNode',
            'app.BarberNode',
            'app.BgmControlNode',
            'app.Ch253ActionNode',
            'app.Ch253ControlNode',
            'app.Ch2TalkNode',
            'app.CharacterControlSegmentNode',
            'app.ChoiceSegmentNode',
            'app.CommonNpcTalkNode',
            'app.DialogNode',
            'app.DragonForgeNode',
            'app.EffectControlNode',
            'app.EndSegmentNode',
            'app.EnhancementNode',
            'app.ForgeryNode',
            'app.HumanCloneNode',
            'app.InnFlowNode',
            'app.ItemControlSegmentNode',
            'app.ItemDeliverySegmentNode',
            'app.JobChangeSegmentNode',
            'app.JobUnlockNode',
            'app.LetterNode',
            'app.MorgueNode',
            'app.NpcWorldTalkNode',
            'app.OracleNode',
            'app.PawnRentalNode',
            'app.PawnTalkNode',
            'app.RootSegmentNode',
            'app.SeekerNode',
            'app.ShopChoiceNode',
            'app.ShopSegmentNode',
            'app.ShotCameraNode',
            'app.SubtitleFeedControlNode',
            'app.TalkSegmentNode',
            'app.TutorialNode',
            'app.UsePowderedRimNode',
            'app.WaitTimeNode',
            'app.WarehouseNode',
        },
    },

    ['app.QuestUniqueParamData.Data'] = {
        fields = { _IDValue = { import_ignore = true } }
    },
    ['app.quest.action.QuestActionParamBase[]'] = {
        array_expander_disable = true,
        force_expander = false,
    },
    ['app.quest.action.NpcControl'] = {
        fields = {
            _Param = quest_action_Param_parent_accessors,
            DecisionMaker = { ui_ignore = true },
            _Task = { ui_ignore = true },
        },
    },
    ['app.ChoiceSegmentNode'] = {
        fields = {
            _ChoiceSegment = { import_ignore = true }
        },
    },
    ['app.QuestProcessor'] = {
        import_field_whitelist = {'Process', 'PrevProcCondition'},
    },
    ['app.QuestProcessor.ProcessEntity'] = {
        import_field_whitelist = {'QuestAction'},
    },
    ['app.QuestAISituation'] = {
        fields = { _ParentSituation = { import_ignore = true } }
    },
    ['app.AISituationTask'] = {
        fields = { _OwnerSituation = { import_ignore = true } }
    },
    ['app.QuestLogResource'] = {
        fields = { _QuestId = { import_ignore = true } }
    },
    ['app.AISituationTaskStateEntity'] = {
        fields = {
            _CachedAIBlackBoardController = { import_ignore = true },
            _CachedNPCHolder = { import_ignore = true },
            Agent = { import_ignore = true },
            NPC_Base = { import_ignore = true },
            TaskEntity = { import_ignore = true },

            -- these below are not part of the base entity, but several subtypes have these fields so may as well just define it here
            PlayerObject = { import_ignore = true },
            OwnerChara = { import_ignore = true },
            OwnerHuman = { import_ignore = true },
            Pawn = { import_ignore = true },
            Timer = { import_ignore = true },
        }
    },
    ['app.AISituationTaskStateEntitySigleNode'] = {
        fields = {
            -- not defined in user files, but maybe we'd need to manually create it from the _LivActionList after import if we're doing custom instances?
            LivActionDict = { import_ignore = true },
            -- ignore below ones for all children, since many of them have these fields and they're (probably) all useless for serialization too
            agent = { import_ignore = true },
            agent_npc = { import_ignore = true },
        }
    },
    ['app.AISituationTaskStateGuide'] = {
        fields = {
            Human = { import_ignore = true },
            CachedConcierge = { import_ignore = true },
        }
    },
    ['app.AISituationTaskStateCheckQuestVariable'] = {
        fields = {
            _QuestVariablesEntity = { import_ignore = true }
        }
    },
    ['app.AISituationTaskStateTalkToPlayer'] = {
        fields = {
            CachedSensorController = { import_ignore = true },
            CachedSpeechController = { import_ignore = true },
        }
    },
    ['app.ThinkTableData'] = {
        fields = {
            _RefThinkTable = { import_ignore = true }
        }
    },
    ['app.AISituation.TaskStateCheckDistanceWithInPlayer'] = {
        fields = {
            AISituationAgent = { import_ignore = true },
        }
    },
    ['app.decision.condition.HasQuestLayerTask'] = {
        fields = {
            Agent = { import_ignore = true },
        }
    },
    ['app.decision.tcondition.HasQuestLayerTask'] = {
        fields = {
            Agent = { import_ignore = true },
        }
    },
    ['AISituation.IAISituationAgent'] = {
        abstract = {'app.AISituationAgent'}
    },

    ['app.actinter.cmd.TalkTo'] = {
        fields = {
            CachedSpeechController = { import_ignore = true }
        }
    },
    ['app.SuddenQuestEntity'] = {
        fieldOrder = {'<Key>k__BackingField', '_CurrentPhase'},
    }
}
